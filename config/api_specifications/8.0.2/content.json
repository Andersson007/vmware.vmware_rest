{
    "swagger": "2.0",
    "info": {
        "description": "VMware vSphere\u00ae Content Library empowers vSphere Admins to effectively manage VM templates, vApps, ISO images and scripts with ease.",
        "title": "content",
        "version": "2.0.0"
    },
    "host": "<vcenter>",
    "securityDefinitions": {
        "session_id": {
            "in": "header",
            "name": "vmware-api-session-id",
            "type": "apiKey"
        },
        "basic_auth": {
            "type": "basic"
        }
    },
    "basePath": "",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/api/content/configuration": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the current configuration values.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.GetConfiguration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The ConfigurationModel instance representing the configuration of the Content Library Service.",
                        "schema": {
                            "$ref": "#/definitions/ContentConfigurationModel"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the configuration. The update is incremental. Any field in the ConfigurationModel structure that is unset will not be modified. Note that this update operation doesn't guarantee an atomic change of all the properties. In the case of a system crash or failure, some of the properties could be left unchanged while others may be updated.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.UpdateConfiguration.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentConfigurationUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "if one of the configuration properties is not within the proper range.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Returns the identifiers of all libraries of any type in the Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of all identifiers of all libraries in the Content Library.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Creates a new library item. \n A new library item is created without any content. After creation, content can be added through the UpdateSession and File services. \n\n A library item cannot be created in a subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the attribute ItemModel.library-id requires ContentLibrary.AddLibraryItem.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemCreate"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Identifier of the new library item.\nThe result will be an identifier for the resource type: content.library.Item.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "if the ItemModel.library-id property of createSpec refers to a library that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if there is already a library item with same name in the library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsAlreadyExists"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Creates a new download session.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the attribute DownloadSessionModel.library-item-id requires ContentLibrary.DownloadSession.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadSessionCreate"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "A unique token generated by the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Identifier of the new download session being created.\nThe result will be an identifier for the resource type: content.library.item.DownloadSession.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "if the session specification is not valid.\n format.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "404": {
                        "description": "if the library item targeted by the download does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Lists the identifiers of the download sessions created by the calling user. Optionally may filter by library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.item.DownloadSession referenced by the parameter libraryItemId requires ContentLibrary.DownloadSession.",
                "parameters": [
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "library_item_id",
                        "description": "Library item identifier on which to filter results.\nIf not specified all download session identifiers are listed.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all download sessions created by the calling user.\nThe result will contain identifiers for the resource type: content.library.item.DownloadSession.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "if a library item identifier is given for an item which does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}": {
            "get": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Gets the download session with the specified identifier, including the most up-to-date status information for the session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session to retrieve.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DownloadSessionModel instance with the given downloadSessionId.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadSessionModel"
                        }
                    },
                    "404": {
                        "description": "if no download session with the given downloadSessionId exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Deletes a download session. This removes the session and all information associated with it. \n Removing a download session leaves any current transfers for that session in an indeterminate state (there is no guarantee that the transfers will be able to complete). However there will no longer be a means of inspecting the status of those downloads except by seeing the effect on the library item. \n\n Download sessions for which there is no download activity or which are complete will automatically be expired and then deleted after a period of time.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session to be deleted.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the download session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}/file": {
            "get": {
                "tags": [
                    "library/item/downloadsession/file"
                ],
                "summary": "Lists the information of all the files in the library item associated with the download session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of File.Info instances.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibraryItemDownloadsessionFileInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "if the download session associated with downloadSessionId doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}/file?action=prepare": {
            "post": {
                "tags": [
                    "library/item/downloadsession/file"
                ],
                "summary": "Requests a file to be prepared for download.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadsessionFilePrepare"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File information containing the status of the request and the download link to the file.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadsessionFileInfo"
                        }
                    },
                    "404": {
                        "description": "if the download session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if there is no file with the specified fileName.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "403": {
                        "description": "if the the download session wasn't created with the ContentLibrary.ReadStorage privilege and the caller requested a DIRECT endpoint type.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "prepare",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}/file?file_name": {
            "get": {
                "tags": [
                    "library/item/downloadsession/file"
                ],
                "summary": "Retrieves file download information for a specific file.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "query",
                        "name": "file_name",
                        "description": "Name of the file requested."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The File.Info instance containing the status of the file and its download link if available.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadsessionFileInfo"
                        }
                    },
                    "404": {
                        "description": "if the download session associated with downloadSessionId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if there is no file with the specified fileName.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}?action=cancel": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Cancels the download session. This operation will abort any ongoing transfers and invalidate transfer urls that the client may be downloading from.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifer of the download session that should be canceled.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no download session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the download session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "cancel",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}?action=fail": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Terminates the download session with a client specified error message. \n This is useful in transmitting client side failures (for example, not being able to download a file) to the server side.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session to fail.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadSessionFail"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the download session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the download session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "fail",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/download-session/{download_session_id}?action=keep-alive": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Keeps a download session alive. This operation is allowed only if the session is in the ACTIVE state. \n If there is no activity for a download session for a certain period of time, the download session will expire. The download session expiration timeout is configurable in the Content Library Service system configuration. The default is five minutes. Invoking this operation enables a client to specifically extend the lifetime of an active download session.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session whose lifetime should be extended.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemDownloadSessionKeepAlive"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no download session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the download session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "keep_alive",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Creates a new update session. An update session is used to make modifications to a library item. Modifications are not visible to other clients unless the session is completed and all necessary files have been received. \n Content Library Service allows only one single update session to be active for a specific library item.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the attribute UpdateSessionModel.library-item-id requires ContentLibrary.UpdateSession.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdateSessionCreate"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "Unique token generated by the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Identifier of the new update session being created.\nThe result will be an identifier for the resource type: content.library.item.UpdateSession.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "if the update session is being created on a subscribed library item.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidElementType"
                        }
                    },
                    "404": {
                        "description": "if the item targeted for update does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "500": {
                        "description": "if there is another update session on the same library item.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceBusy"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Lists the identifiers of the update session created by the calling user. Optionally may filter by library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.item.UpdateSession referenced by the parameter libraryItemId requires ContentLibrary.UpdateSession.",
                "parameters": [
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "library_item_id",
                        "description": "Optional library item identifier on which to filter results.\nIf not specified the results are not filtered.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all update sessions created by the calling user.\nThe result will contain identifiers for the resource type: content.library.item.UpdateSession.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "if a library item identifier is given for an item which does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}": {
            "get": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Gets the update session with the specified identifier, including the most up-to-date status information for the session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to retrieve.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The UpdateSessionModel instance with the given updateSessionId.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdateSessionModel"
                        }
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Updates the properties of an update session. \n This is an incremental update to the update session. Any field in the UpdateSessionModel structure that is unset will not be modified. \n\n This operation will only update the property UpdateSessionModel.warning-behavior of the update session. This will not, for example, update the UpdateSessionModel.library-item-id or UpdateSessionModel.state of an update session. \n\n This operation requires the session to be in the ACTIVE state.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifer of the update session that should be updated.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdateSessionUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session specification is not valid.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Deletes an update session. This removes the session and all information associated with it. \n Removing an update session leaves any current transfers for that session in an indeterminate state (there is no guarantee that the server will terminate the transfers, or that the transfers can be completed). However there will no longer be a means of inspecting the status of those uploads except by seeing the effect on the library item. \n\n Update sessions for which there is no upload activity or which are complete will automatically be deleted after a period of time.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifer of the update session to delete.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session is in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}/file": {
            "post": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Requests file content to be changed (either created, or updated). Depending on the source type of the file, this operation will either return an upload endpoint where the client can push the content, or the server will pull from the provided source endpoint. If a file with the same name already exists in this session, this operation will be used to update the content of the existing file. \n When importing a file directly from storage, where the source endpoint is a file or datastore URI, you will need to have the ContentLibrary.ReadStorage privilege on the library item. If the file is located in the same directory as the library storage backing folder, the server will move the file instead of copying it, thereby allowing instantaneous import of files for efficient backup and restore scenarios. In all other cases, a copy is performed rather than a move.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to be modified.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileAdd"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "An File.Info structure containing upload links as well as server side state tracking the transfer of the file.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileInfo"
                        }
                    },
                    "400": {
                        "description": "if the content of the library item associated with the update session has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it.\n if metadata files such as manifest and certificate file are added after the OVF descriptor file. This is applicable to update sessions with library item type OVF only. This error was added in vSphere 6.8.0.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "403": {
                        "description": "if the caller doesn't have ContentLibrary.ReadStorage privilege on the library item of the update session and source type PULL is requested for a file or datastore source endpoint (that is, not HTTP or HTTPs based endpoint).",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "add",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Lists all files in the library item associated with the update session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of the files in the library item associated with the update session. This list may be empty if the caller has removed all the files as part of this session (in which case completing the update session will result in an empty library item).",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}/file/{file_name}": {
            "get": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Retrieves information about a specific file in the snapshot of the library item at the time when the update session was created.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "file_name",
                        "description": "Name of the file."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the file.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileInfo"
                        }
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the file doesn't exist in the library item associated with the update session.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Requests a file to be removed. The file will only be effectively removed when the update session is completed.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "file_name",
                        "description": "Name of the file to be removed."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the file doesn't exist in the library item associated with the update session.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "remove",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}/file?action=validate": {
            "post": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Validates the files in the update session with the referenced identifier and ensures all necessary files are received. In the case where a file is missing, this operation will return its name in the File.ValidationResult.missing-files set. The user can add the missing files and try re-validating. For other type of errors, File.ValidationResult.invalid-files will contain the list of invalid files.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to validate.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A validation result containing missing files or invalid files and the reason why they are invalid.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileValidationResult"
                        }
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state, or if some of the files that will be uploaded by the client aren't received correctly.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "validate",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}?action=cancel": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Cancels the update session and sets its state to CANCELED. This operation will free up any temporary resources currently associated with the session. \n This operation is not allowed if the session has been already completed. \n\n Cancelling an update session will cancel any in progress transfers (either uploaded by the client or pulled by the server). Any content that has been already received will be scheduled for deletion.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session that should be canceled.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "cancel",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}?action=complete": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Completes the update session. This indicates that the client has finished making all the changes required to the underlying library item. If the client is pushing the content to the server, the library item will be updated once this call returns. If the server is pulling the content, the call may return before the changes become visible. In that case, the client can track the session to know when the server is done. \n This operation requires the session to be in the ACTIVE state. \n\n Depending on the type of the library item associated with this session, a type adapter may be invoked to verify the validity of the files uploaded. The user can explicitly validate the session before completing the session by using the File.validate operation. \n\n Modifications are not visible to other clients unless the session is completed and all necessary files have been received.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session that should be completed.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state, or if some of the files that will be uploaded by the client aren't received correctly.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "complete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}?action=fail": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Terminates the update session with a client specified error message. \n This is useful in transmitting client side failures (for example, not being able to access a file) to the server side.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to fail.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdateSessionFail"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "fail",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/update-session/{update_session_id}?action=keep-alive": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Keeps an update session alive. \n If there is no activity for an update session after a period of time, the update session will expire, then be deleted. The update session expiration timeout is configurable in the Content Library Service system configuration. The default is five minutes. Invoking this operation enables a client to specifically extend the lifetime of the update session.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session whose lifetime should be extended.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdateSessionKeepAlive"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "keep_alive",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item_id}": {
            "get": {
                "tags": [
                    "library/item"
                ],
                "summary": "Returns the ItemModel with the given identifier.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to return.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The ItemModel instance with the given libraryItemId.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemModel"
                        }
                    },
                    "404": {
                        "description": "if no item with the given libraryItemId exists.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "library/item"
                ],
                "summary": "Updates the specified properties of a library item. \n This is an incremental update to the library item. Fields that are unset in the update specification are left unchanged. \n\n This operation cannot update a library item that is a member of a subscribed library. Those items must be updated in the source published library and synchronized to the subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.UpdateLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to update.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library item specified by libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if there is already a library item with same name in the library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsAlreadyExists"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "library/item"
                ],
                "summary": "Deletes a library item. \n This operation will immediately remove the item from the library that owns it. The content of the item will be asynchronously removed from the storage backings. The content deletion can be tracked with a task. In the event that the task fails, an administrator may need to manually remove the files from the storage backing. \n\n This operation cannot be used to delete a library item that is a member of a subscribed library. Removing an item from a subscribed library requires deleting the item from the original published local library and syncing the subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.DeleteLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to delete.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the library item contains a virtual machine template and a virtual machine is checked out of the library item.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "404": {
                        "description": "if the library item with the specified libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item_id}/file": {
            "get": {
                "tags": [
                    "library/item/file"
                ],
                "summary": "Lists all of the files that are stored within a given library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose files should be listed.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of all of the files that are stored within the given library item.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibraryItemFileInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "if libraryItemId refers to a library item that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item_id}/file?name": {
            "get": {
                "tags": [
                    "library/item/file"
                ],
                "summary": "Retrieves the information for a single file in a library item by its name.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose file information should be returned.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "query",
                        "name": "name",
                        "description": "Name of the file in the library item whose information should be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The File.Info object with information on the specified file.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemFileInfo"
                        }
                    },
                    "404": {
                        "description": "if libraryItemId refers to a library item that does not exist.\n if name refers to a file that does not exist in the library item.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item_id}/storage": {
            "get": {
                "tags": [
                    "library/item/storage"
                ],
                "summary": "Lists all storage items for a given library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.ReadStorage.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose storage information should be listed.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of all storage items for a given library item.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibraryItemStorageInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "if the specified library item does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item_id}/storage?file_name": {
            "get": {
                "tags": [
                    "library/item/storage"
                ],
                "summary": "Retrieves the storage information for a specific file in a library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.ReadStorage.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose storage information should be retrieved.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "query",
                        "name": "file_name",
                        "description": "Name of the file for which the storage information should be listed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of all the storage items for the given file within the given library item.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibraryItemStorageInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "if the specified library item does not exist.\n if the specified file does not exist in the given library item.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item_id}?action=publish": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Publishes the library item to specified subscriptions of the library. If no subscriptions are specified, then publishes the library item to all subscriptions of the library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.PublishLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Library item identifier.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemPublish"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "If the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If the library item specified by libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "If the library item specified by libraryItemId does not belong to a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "publish",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item}/changes": {
            "get": {
                "tags": [
                    "library/item/changes"
                ],
                "summary": "Returns commonly used information about the content changes made to a library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItem requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item",
                        "description": "Library item identifier.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of commonly used information about the library item changes.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibraryItemChangesSummary"
                            }
                        }
                    },
                    "404": {
                        "description": "if the library item is not found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "401": {
                        "description": "if the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "if the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{library_item}/changes/{version}": {
            "get": {
                "tags": [
                    "library/item/changes"
                ],
                "summary": "Returns information about a library item change.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItem requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item",
                        "description": "Library item identifer.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Library item version.\nThe parameter must be an identifier for the resource type: content.library.item.Version."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the specified library item change.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemChangesInfo"
                        }
                    },
                    "404": {
                        "description": "if the library item or version is not found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "401": {
                        "description": "if the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "if the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item/{source_library_item_id}?action=copy": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Copies a library item. \n Copying a library item allows a duplicate to be made within the same or different library. The copy occurs by first creating a new library item, whose identifier is returned. The content of the library item is then copied asynchronously. This copy can be tracked as a task. \n\n If the copy fails, Content Library Service will roll back the copy by deleting any content that was already copied, and removing the new library item. A failure during rollback may require manual cleanup by an administrator. \n\n A library item cannot be copied into a subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter sourceLibraryItemId requires System.Read. \n  -  The resource content.Library referenced by the attribute ItemModel.library-id requires ContentLibrary.AddLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "source_library_item_id",
                        "description": "Identifier of the existing library item from which the content will be copied.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemCopy"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "A unique token generated on the client for each copy request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent copy.\nIf not specified copy is not idempotent."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The identifier of the new library item into which the content is being copied.\nThe result will be an identifier for the resource type: content.library.Item.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "if the library item with sourceLibraryItemId does not exist, or if the library referenced by the ItemModel.library-id property of destinationCreateSpec does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the content of the source library item specified by sourceLibraryItemId, or the content of the target library specified by the library ID (see ItemModel.library-id) property of destinationCreateSpec has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "500": {
                        "description": "if the copy operation failed because the source or destination library item is not accessible.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceInaccessible"
                        }
                    }
                },
                "operationId": "copy",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item?action=find": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Returns identifiers of all the visible (as determined by authorization policy) library items matching the requested Item.FindSpec.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read. \n  -  The resource content.Library referenced by the attribute Item.FindSpec.library-id requires System.Read.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryItemFind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all the visible library items matching the given spec.\nThe result will contain identifiers for the resource type: content.library.Item.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "if no properties are specified in the spec.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "find",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/item?library_id": {
            "get": {
                "tags": [
                    "library/item"
                ],
                "summary": "Returns the identifiers of all items in the given library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "query",
                        "name": "library_id",
                        "description": "Identifier of the library whose items should be returned.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of the items in the library specified by libraryId.\nThe result will contain identifiers for the resource type: content.library.Item.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "if the library associated with libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/subscribed-item/{library_item_id}?action=evict": {
            "post": {
                "tags": [
                    "library/subscribed_item"
                ],
                "summary": "Evicts the cached content of a library item in a subscribed library. \n This operation allows the cached content of a library item to be removed to free up storage capacity. This operation will only work when a library item is synchronized on-demand. When a library is not synchronized on-demand, it always attempts to keep its cache up-to-date with the published source. Evicting the library item will set ItemModel.cached to false.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.EvictLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose content should be evicted.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library item specified by libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the content of the library item specified by libraryItemId has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it. \n For instance, this {@term error) is reported on evicting a library item in an on-demand subscribed library that was restored from backup, and the library item was deleted after backup, thus resulting in its content being deleted from the associated storage backings. In this scenario, the metadata of the library item is present on a restore, while its content has been deleted.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "evict",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/subscribed-item/{library_item_id}?action=sync": {
            "post": {
                "tags": [
                    "library/subscribed_item"
                ],
                "summary": "Forces the synchronization of an individual library item in a subscribed library. \n Synchronizing an individual item will update that item's metadata from the remote source. If the source library item on the remote library has been deleted, this operation will delete the library item from the subscribed library as well. \n\n The default behavior of the synchronization is determined by the SubscriptionInfo of the library which owns the library item. \n\n   - If SubscriptionInfo.on-demand is true, then the file content is not synchronized by default. In this case, only the library item metadata is synchronized. The file content may still be forcefully synchronized by passing true for the forceSyncContent parameter.\n   - If SubscriptionInfo.on-demand is false, then this call will always synchronize the file content. The forceSyncContent parameter is ignored when the subscription is not on-demand.\n  When the file content has been synchronized, the ItemModel.cached field will be true. \n This operation will return immediately and create an asynchronous task to perform the synchronization.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.SyncLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to synchronize.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContentLibrarySubscribedItemSync"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library item specified by libraryItemId could not be found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the content of the library item specified by libraryItemId has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it. \n For instance, this {@term error) is reported on synchronizing a library item in a subscribed library that was restored from backup, and the library item was deleted after backup, thus resulting in its content being deleted from the associated storage backings. In this scenario, the metadata of the library item is present on a restore, while its content has been deleted.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "sync",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/{library_id}": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Returns a given LibraryModel.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the library to return.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The LibraryModel instance with the specified libraryId.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryModel"
                        }
                    },
                    "404": {
                        "description": "if the specified library does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "library"
                ],
                "summary": "Updates the properties of a library. \n This is an incremental update to the library. Any field in the LibraryModel structure that is unset will not be modified. \n\n This operation will only update the common properties for all library types. This will not, for example, update the LibraryModel.publish-info of a local library, nor the LibraryModel.subscription-info of a subscribed library. Specific properties are updated in LocalLibrary.update and SubscribedLibrary.update.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.UpdateLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the library to update.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library associated with libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the updateSpec is not valid.\n if the LibraryModel.version of updateSpec is not equal to the current version of the library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/{library}/subscriptions": {
            "post": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Creates a subscription of the published library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires ContentLibrary.AddSubscription.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibrarySubscriptionsCreate"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified, creation is not idempotent."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription identifier.\nThe result will be an identifier for the resource type: content.library.Subscriptions.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "500": {
                        "description": "If the vCenter instance specified by subscribedLibrary#vcenter cannot be contacted or found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceInaccessible"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.\n If the subscribed library specified by subscribedLibrary#subscribedLibrary does not exist at the vCenter instance specified by subscribedLibrary#vcenter.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Lists the subscriptions of the published library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of commonly used information about subscriptions of the published library.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentLibrarySubscriptionsSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "If the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library/{library}/subscriptions/{subscription}": {
            "get": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Returns information about the specified subscription of the published library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "subscription",
                        "description": "Identifier of the subscription.\nThe parameter must be an identifier for the resource type: content.library.Subscriptions."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the subscription.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibrarySubscriptionsInfo"
                        }
                    },
                    "500": {
                        "description": "If the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Updates the specified subscription of the published library. \n This is an incremental update to the subscription. Except for the Subscriptions.UpdateSpecPlacement structure, fields that are unset in the update specification will be left unchanged. If spec#subscribedLibraryPlacement is specified, all fields of the current subscribed library placement will be replaced by this placement.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires ContentLibrary.UpdateSubscription.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "subscription",
                        "description": "subscription identifier.\nThe parameter must be an identifier for the resource type: content.library.Subscriptions."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibrarySubscriptionsUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "If the subscribed library cannot be contacted or found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceInaccessible"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.\n If the subscription specified by subscription does not exist for the library specified by library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Deletes the specified subscription of the published library. The subscribed library associated with the subscription will not be deleted.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires ContentLibrary.DeleteSubscription.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "subscription",
                        "description": "Subscription identifier.\nThe parameter must be an identifier for the resource type: content.library.Subscriptions."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "If the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.\n If the subscription specified by subscription does not exist for the library specified by library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/library?action=find": {
            "post": {
                "tags": [
                    "library"
                ],
                "summary": "Returns a list of all the visible (as determined by authorization policy) libraries matching the requested Library.FindSpec.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryFind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all the visible libraries matching the given spec.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "if no properties are specified in the spec.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    }
                },
                "operationId": "find",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/local-library": {
            "post": {
                "tags": [
                    "local_library"
                ],
                "summary": "Creates a new local library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.CreateLocalLibrary. \n  -  The resource Datastore referenced by the attribute StorageBacking.datastore-id requires Datastore.AllocateSpace.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLocalLibraryCreate"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Identifier of the newly created LibraryModel.\nThe result will be an identifier for the resource type: content.Library.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "if using multiple storage backings.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnsupported"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "local_library"
                ],
                "summary": "Returns the identifiers of all local libraries in the Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all local libraries in the Content Library.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/local-library/{library_id}": {
            "get": {
                "tags": [
                    "local_library"
                ],
                "summary": "Returns a given local library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the local library to return.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The LibraryModel instance associated with libraryId.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryModel"
                        }
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the library specified by libraryId is not a local library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidElementType"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "local_library"
                ],
                "summary": "Updates the properties of a local library. \n This is an incremental update to the local library. Fields that are unset in the update specification will be left unchanged.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.UpdateLocalLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the local library to update.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLocalLibraryUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the updateSpec is not valid.\n if the PublishInfo.current-password in the updateSpec does not match the existing password of the published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "500": {
                        "description": "if the LibraryModel.version of updateSpec is unset and the library is being concurrently updated by another user.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceBusy"
                        }
                    },
                    "409": {
                        "description": "if the LibraryModel.version of updateSpec is not equal to the current version of the library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsConcurrentChange"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "local_library"
                ],
                "summary": "Deletes the specified local library. \n Deleting a local library will remove the entry immediately and begin an asynchronous task to remove all cached content for the library. If the asynchronous task fails, file content may remain on the storage backing. This content will require manual removal.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.DeleteLocalLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the local library to delete.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the library contains a library item that cannot be deleted in its current state. For example, the library item contains a virtual machine template and a virtual machine is checked out of the library item.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/local-library/{library_id}?action=publish": {
            "post": {
                "tags": [
                    "local_library"
                ],
                "summary": "Publishes the library to specified subscriptions. If no subscriptions are specified, then publishes the library to all its subscriptions.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.PublishLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentLocalLibraryPublish"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "If the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "If the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "If the library specified by libraryId is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthorized"
                        }
                    }
                },
                "operationId": "publish",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/security-policies": {
            "get": {
                "tags": [
                    "security_policies"
                ],
                "summary": "Returns the list of security policies.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of security policies.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentSecurityPoliciesInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/subscribed-library": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Creates a new subscribed library. \n Once created, the subscribed library will be empty. If the LibraryModel.subscription-info property is set, the Content Library Service will attempt to synchronize to the remote source. This is an asynchronous operation so the content of the published library may not immediately appear.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.CreateSubscribedLibrary. \n  -  The resource Datastore referenced by the attribute StorageBacking.datastore-id requires Datastore.AllocateSpace.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentSubscribedLibraryCreate"
                        }
                    },
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "client_token",
                        "description": "Unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Identifier of the newly created subscribed library.\nThe result will be an identifier for the resource type: content.Library.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "if using multiple storage backings.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnsupported"
                        }
                    },
                    "500": {
                        "description": "if subscribing to a published library which cannot be accessed.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceInaccessible"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Returns the identifiers of all subscribed libraries in the Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all subscribed libraries in the Content Library.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/subscribed-library/{library_id}": {
            "get": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Returns a given subscribed library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to return.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The LibraryModel instance that corresponds to libraryId.",
                        "schema": {
                            "$ref": "#/definitions/ContentLibraryModel"
                        }
                    },
                    "404": {
                        "description": "if the library associated with libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the library associated with libraryId is not a subscribed library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidElementType"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Updates the properties of a subscribed library. \n This is an incremental update to the subscribed library. Fields that are unset in the update specification will be left unchanged.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.UpdateSubscribedLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to update.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentSubscribedLibraryUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the updateSpec is not valid.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "500": {
                        "description": "if the LibraryModel.version of updateSpec is unset and the library is being concurrently updated by another user.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceBusy"
                        }
                    },
                    "409": {
                        "description": "if the LibraryModel.version of updateSpec is not equal to the current version of the library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsConcurrentChange"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Deletes the specified subscribed library. \n Deleting a subscribed library will remove the entry immediately and begin an asynchronous task to remove all cached content for the library. If the asynchronous task fails, file content may remain on the storage backing. This content will require manual removal.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.DeleteSubscribedLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to delete.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the library referenced by libraryId is not a subscribed library.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidElementType"
                        }
                    },
                    "404": {
                        "description": "if the library referenced by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/subscribed-library/{library_id}?action=evict": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Evicts the cached content of an on-demand subscribed library. \n This operation allows the cached content of a subscribed library to be removed to free up storage capacity. This operation will only work when a subscribed library is synchronized on-demand.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.EvictSubscribedLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library whose content should be evicted.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if the library specified by libraryId does not synchronize on-demand, or if the content of the library specified by libraryId has been deleted from the storage backings (see LibraryModel.storage-backings) associated with it. \n For instance, this {@term error) is reported on evicting an on-demand subscribed library that was restored from backup, and the library was deleted after the backup was taken, thus resulting in its content being deleted from the associated storage backings. In this scenario, the metadata of the library is present on a restore, while its content has been deleted.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotAllowedInCurrentState"
                        }
                    }
                },
                "operationId": "evict",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/subscribed-library/{library_id}?action=sync": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Forces the synchronization of the subscribed library. \n Synchronizing a subscribed library forcefully with this operation will perform the same synchronization behavior as would run periodically for the library. The SubscriptionInfo.on-demand setting is respected. Calling this operation on a library that is already in the process of synchronizing will have no effect.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.SyncLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to synchronize.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "400": {
                        "description": "if some parameter in the subscribed library subscription info is invalid.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsInvalidArgument"
                        }
                    },
                    "500": {
                        "description": "if the published library cannot be contacted or found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsResourceInaccessible"
                        }
                    }
                },
                "operationId": "sync",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/subscribed-library?action=probe": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Probes remote library subscription information, including URL, SSL certificate and password. The resulting SubscribedLibrary.ProbeResult structure describes whether or not the subscription configuration is successful.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.ProbeSubscription.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContentSubscribedLibraryProbe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The subscription info probe result.",
                        "schema": {
                            "$ref": "#/definitions/ContentSubscribedLibraryProbeResult"
                        }
                    }
                },
                "operationId": "probe",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/trusted-certificates": {
            "post": {
                "tags": [
                    "trusted_certificates"
                ],
                "summary": "Adds a certificate to content library trust store. \n This API has to be invoked separately for each certificate block - (BEGIN_CERTIFICATE ... END_CERTIFICATE)\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.AddCertToTrustStore.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/ContentTrustedCertificatesCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of the certificates added. The certificate ID will be unique for each certificate. If the certificate already exists, existing ID is returned.\nThe result will be an identifier for the resource type: content.TrustedCertificate.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "trusted_certificates"
                ],
                "summary": "Returns TrustedCertificates.ListResult structure. All content library's trusted certificates.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "TrustedCertificates.ListResult containing trusted certificates.",
                        "schema": {
                            "$ref": "#/definitions/ContentTrustedCertificatesListResult"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/trusted-certificates/{certificate}": {
            "get": {
                "tags": [
                    "trusted_certificates"
                ],
                "summary": "Retrieves a trusted certificate for a given certificate id.\nif you do not have all of the privileges described as follows: \n   -  The resource content.TrustedCertificate referenced by the parameter certificate requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "certificate",
                        "description": "id of the trusted certificate.\nThe parameter must be an identifier for the resource type: content.TrustedCertificate."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TrustedCertificates.Info instance that corresponds to the certificate.",
                        "schema": {
                            "$ref": "#/definitions/ContentTrustedCertificatesInfo"
                        }
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    },
                    "404": {
                        "description": "if a trusted certificate does not exist for given id.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "trusted_certificates"
                ],
                "summary": "Deletes the trusted certificate from content library's trust store for a given identifier.\nif you do not have all of the privileges described as follows: \n   -  The resource content.TrustedCertificate referenced by the parameter certificate requires ContentLibrary.DeleteCertFromTrustStore.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "certificate",
                        "description": "id of the trusted certificate.\nThe parameter must be an identifier for the resource type: content.TrustedCertificate."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsError"
                        }
                    },
                    "404": {
                        "description": "if the trusted certificate specified by certificate could not be found.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsNotFound"
                        }
                    },
                    "401": {
                        "description": "if the user can not be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/VapiStdErrorsUnauthenticated"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/api/content/type": {
            "get": {
                "tags": [
                    "type"
                ],
                "summary": "Returns a list of Type.Info instances which describe the type support plugins in a Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.TypeIntrospection.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of Type.Info instances which describe the type support plugins in a Content Library.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentTypeInfo"
                            }
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ]
            }
        },
        "/rest/com/vmware/content/configuration": {
            "patch": {
                "tags": [
                    "configuration"
                ],
                "summary": "Updates the configuration. The update is incremental. Any field in the ConfigurationModel structure that is unset will not be modified. Note that this update operation doesn't guarantee an atomic change of all the properties. In the case of a system crash or failure, some of the properties could be left unchanged while others may be updated.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.UpdateConfiguration.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.configuration_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if one of the configuration properties is not within the proper range.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1configuration/patch"
                }
            }
        },
        "/rest/com/vmware/content/configuration?~action=get": {
            "post": {
                "tags": [
                    "configuration"
                ],
                "summary": "Retrieves the current configuration values.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.GetConfiguration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The ConfigurationModel instance representing the configuration of the Content Library Service.",
                        "schema": {
                            "$ref": "#/definitions/content.configuration_resp"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1configuration/get"
                }
            }
        },
        "/rest/com/vmware/content/library": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Returns the identifiers of all libraries of any type in the Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of all identifiers of all libraries in the Content Library.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "$ref": "#/definitions/content.library.list_resp"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library/get"
                }
            }
        },
        "/rest/com/vmware/content/library/id:{library_id}": {
            "get": {
                "tags": [
                    "library"
                ],
                "summary": "Returns a given LibraryModel.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the library to return.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The LibraryModel instance with the specified libraryId.",
                        "schema": {
                            "$ref": "#/definitions/content.library_resp"
                        }
                    },
                    "404": {
                        "description": "if the specified library does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library_id}/get"
                }
            },
            "patch": {
                "tags": [
                    "library"
                ],
                "summary": "Updates the properties of a library. \n This is an incremental update to the library. Any field in the LibraryModel structure that is unset will not be modified. \n\n This operation will only update the common properties for all library types. This will not, for example, update the LibraryModel.publish-info of a local library, nor the LibraryModel.subscription-info of a subscribed library. Specific properties are updated in LocalLibrary.update and SubscribedLibrary.update.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.UpdateLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the library to update.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library associated with libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the updateSpec is not valid.\n if the LibraryModel.version of updateSpec is not equal to the current version of the library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library_id}/patch"
                }
            }
        },
        "/rest/com/vmware/content/library/item": {
            "get": {
                "tags": [
                    "library/item"
                ],
                "summary": "Returns the identifiers of all items in the given library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "library_id",
                        "description": "Identifier of the library whose items should be returned.\nThe parameter must be an identifier for the resource type: content.Library.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of the items in the library specified by libraryId.\nThe result will contain identifiers for the resource type: content.library.Item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.list_resp"
                        }
                    },
                    "404": {
                        "description": "if the library associated with libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item?library_id/get"
                }
            },
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Creates a new library item. \n A new library item is created without any content. After creation, content can be added through the UpdateSession and File services. \n\n A library item cannot be created in a subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the attribute ItemModel.library-id requires ContentLibrary.AddLibraryItem.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identifier of the new library item.\nThe result will be an identifier for the resource type: content.library.Item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.create_resp"
                        }
                    },
                    "404": {
                        "description": "if the ItemModel.library-id property of createSpec refers to a library that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if there is already a library item with same name in the library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.already_exists_error"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/download-session": {
            "get": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Lists the identifiers of the download sessions created by the calling user. Optionally may filter by library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.item.DownloadSession referenced by the parameter libraryItemId requires ContentLibrary.DownloadSession.",
                "parameters": [
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "library_item_id",
                        "description": "Library item identifier on which to filter results.\nIf not specified all download session identifiers are listed.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all download sessions created by the calling user.\nThe result will contain identifiers for the resource type: content.library.item.DownloadSession.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.download_session.list_resp"
                        }
                    },
                    "404": {
                        "description": "if a library item identifier is given for an item which does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session/get"
                }
            },
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Creates a new download session.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the attribute DownloadSessionModel.library-item-id requires ContentLibrary.DownloadSession.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.download_session_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identifier of the new download session being created.\nThe result will be an identifier for the resource type: content.library.item.DownloadSession.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.download_session.create_resp"
                        }
                    },
                    "400": {
                        "description": "if the session specification is not valid.\n format.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "404": {
                        "description": "if the library item targeted by the download does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/download-session/id:{download_session_id}": {
            "get": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Gets the download session with the specified identifier, including the most up-to-date status information for the session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session to retrieve.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DownloadSessionModel instance with the given downloadSessionId.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.download_session_resp"
                        }
                    },
                    "404": {
                        "description": "if no download session with the given downloadSessionId exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}/get"
                }
            },
            "delete": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Deletes a download session. This removes the session and all information associated with it. \n Removing a download session leaves any current transfers for that session in an indeterminate state (there is no guarantee that the transfers will be able to complete). However there will no longer be a means of inspecting the status of those downloads except by seeing the effect on the library item. \n\n Download sessions for which there is no download activity or which are complete will automatically be expired and then deleted after a period of time.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session to be deleted.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the download session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}/delete"
                }
            }
        },
        "/rest/com/vmware/content/library/item/download-session/id:{download_session_id}?~action=cancel": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Cancels the download session. This operation will abort any ongoing transfers and invalidate transfer urls that the client may be downloading from.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifer of the download session that should be canceled.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no download session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the download session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "cancel",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}?action=cancel/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/download-session/id:{download_session_id}?~action=fail": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Terminates the download session with a client specified error message. \n This is useful in transmitting client side failures (for example, not being able to download a file) to the server side.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session to fail.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.download_session_fail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the download session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the download session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "fail",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}?action=fail/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/download-session/id:{download_session_id}?~action=keep-alive": {
            "post": {
                "tags": [
                    "library/item/download_session"
                ],
                "summary": "Keeps a download session alive. This operation is allowed only if the session is in the ACTIVE state. \n If there is no activity for a download session for a certain period of time, the download session will expire. The download session expiration timeout is configurable in the Content Library Service system configuration. The default is five minutes. Invoking this operation enables a client to specifically extend the lifetime of an active download session.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session whose lifetime should be extended.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.download_session_keep_alive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no download session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the download session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "keep_alive",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}?action=keep-alive/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/downloadsession/file": {
            "get": {
                "tags": [
                    "library/item/downloadsession/file"
                ],
                "summary": "Lists the information of all the files in the library item associated with the download session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "download_session_id",
                        "description": "Identifier of the download session.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of File.Info instances.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.downloadsession.file.list_resp"
                        }
                    },
                    "404": {
                        "description": "if the download session associated with downloadSessionId doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}~1file/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/downloadsession/file/id:{download_session_id}?~action=get": {
            "post": {
                "tags": [
                    "library/item/downloadsession/file"
                ],
                "summary": "Retrieves file download information for a specific file.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.downloadsession.file_get"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The File.Info instance containing the status of the file and its download link if available.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.downloadsession.file_resp"
                        }
                    },
                    "404": {
                        "description": "if the download session associated with downloadSessionId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if there is no file with the specified fileName.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}~1file?file_name/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/downloadsession/file/id:{download_session_id}?~action=prepare": {
            "post": {
                "tags": [
                    "library/item/downloadsession/file"
                ],
                "summary": "Requests a file to be prepared for download.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "download_session_id",
                        "description": "Identifier of the download session.\nThe parameter must be an identifier for the resource type: content.library.item.DownloadSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.downloadsession.file_prepare"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File information containing the status of the request and the download link to the file.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.downloadsession.file.prepare_resp"
                        }
                    },
                    "404": {
                        "description": "if the download session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if there is no file with the specified fileName.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    },
                    "403": {
                        "description": "if the the download session wasn't created with the ContentLibrary.ReadStorage privilege and the caller requested a DIRECT endpoint type.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "prepare",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1download-session~1{download_session_id}~1file?action=prepare/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/file": {
            "get": {
                "tags": [
                    "library/item/file"
                ],
                "summary": "Lists all of the files that are stored within a given library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose files should be listed.\nThe parameter must be an identifier for the resource type: content.library.Item.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of all of the files that are stored within the given library item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.file.list_resp"
                        }
                    },
                    "404": {
                        "description": "if libraryItemId refers to a library item that does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}~1file/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/file/id:{library_item_id}?~action=get": {
            "post": {
                "tags": [
                    "library/item/file"
                ],
                "summary": "Retrieves the information for a single file in a library item by its name.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose file information should be returned.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.file_get"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The File.Info object with information on the specified file.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.file_resp"
                        }
                    },
                    "404": {
                        "description": "if libraryItemId refers to a library item that does not exist.\n if name refers to a file that does not exist in the library item.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}~1file?name/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/id:{library_item_id}": {
            "get": {
                "tags": [
                    "library/item"
                ],
                "summary": "Returns the ItemModel with the given identifier.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to return.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The ItemModel instance with the given libraryItemId.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item_resp"
                        }
                    },
                    "404": {
                        "description": "if no item with the given libraryItemId exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}/get"
                }
            },
            "patch": {
                "tags": [
                    "library/item"
                ],
                "summary": "Updates the specified properties of a library item. \n This is an incremental update to the library item. Fields that are unset in the update specification are left unchanged. \n\n This operation cannot update a library item that is a member of a subscribed library. Those items must be updated in the source published library and synchronized to the subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.UpdateLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to update.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library item specified by libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if there is already a library item with same name in the library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.already_exists_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}/patch"
                }
            },
            "delete": {
                "tags": [
                    "library/item"
                ],
                "summary": "Deletes a library item. \n This operation will immediately remove the item from the library that owns it. The content of the item will be asynchronously removed from the storage backings. The content deletion can be tracked with a task. In the event that the task fails, an administrator may need to manually remove the files from the storage backing. \n\n This operation cannot be used to delete a library item that is a member of a subscribed library. Removing an item from a subscribed library requires deleting the item from the original published local library and syncing the subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.DeleteLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to delete.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the library item contains a virtual machine template and a virtual machine is checked out of the library item.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "if the library item with the specified libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}/delete"
                }
            }
        },
        "/rest/com/vmware/content/library/item/id:{library_item_id}?~action=publish": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Publishes the library item to specified subscriptions of the library. If no subscriptions are specified, then publishes the library item to all subscriptions of the library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.PublishLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Library item identifier.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item_publish"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "If the library item specified by libraryItemId does not belong to a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library item specified by libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "publish",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}?action=publish/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/id:{source_library_item_id}?~action=copy": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Copies a library item. \n Copying a library item allows a duplicate to be made within the same or different library. The copy occurs by first creating a new library item, whose identifier is returned. The content of the library item is then copied asynchronously. This copy can be tracked as a task. \n\n If the copy fails, Content Library Service will roll back the copy by deleting any content that was already copied, and removing the new library item. A failure during rollback may require manual cleanup by an administrator. \n\n A library item cannot be copied into a subscribed library.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter sourceLibraryItemId requires System.Read. \n  -  The resource content.Library referenced by the attribute ItemModel.library-id requires ContentLibrary.AddLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "source_library_item_id",
                        "description": "Identifier of the existing library item from which the content will be copied.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item_copy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The identifier of the new library item into which the content is being copied.\nThe result will be an identifier for the resource type: content.library.Item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.copy_resp"
                        }
                    },
                    "404": {
                        "description": "if the library item with sourceLibraryItemId does not exist, or if the library referenced by the ItemModel.library-id property of destinationCreateSpec does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the content of the source library item specified by sourceLibraryItemId, or the content of the target library specified by the library ID (see ItemModel.library-id) property of destinationCreateSpec has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "copy",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{source_library_item_id}?action=copy/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/storage": {
            "get": {
                "tags": [
                    "library/item/storage"
                ],
                "summary": "Lists all storage items for a given library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.ReadStorage.",
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose storage information should be listed.\nThe parameter must be an identifier for the resource type: content.library.Item.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of all storage items for a given library item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.storage.list_resp"
                        }
                    },
                    "404": {
                        "description": "if the specified library item does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}~1storage/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/storage/id:{library_item_id}?~action=get": {
            "post": {
                "tags": [
                    "library/item/storage"
                ],
                "summary": "Retrieves the storage information for a specific file in a library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.ReadStorage.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose storage information should be retrieved.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.storage_get"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of all the storage items for the given file within the given library item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.storage_resp"
                        }
                    },
                    "404": {
                        "description": "if the specified library item does not exist.\n if the specified file does not exist in the given library item.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item_id}~1storage?file_name/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/update-session": {
            "get": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Lists the identifiers of the update session created by the calling user. Optionally may filter by library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.item.UpdateSession referenced by the parameter libraryItemId requires ContentLibrary.UpdateSession.",
                "parameters": [
                    {
                        "required": false,
                        "type": "string",
                        "in": "query",
                        "name": "library_item_id",
                        "description": "Optional library item identifier on which to filter results.\nIf not specified the results are not filtered.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all update sessions created by the calling user.\nThe result will contain identifiers for the resource type: content.library.item.UpdateSession.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session.list_resp"
                        }
                    },
                    "404": {
                        "description": "if a library item identifier is given for an item which does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session/get"
                }
            },
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Creates a new update session. An update session is used to make modifications to a library item. Modifications are not visible to other clients unless the session is completed and all necessary files have been received. \n Content Library Service allows only one single update session to be active for a specific library item.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the attribute UpdateSessionModel.library-item-id requires ContentLibrary.UpdateSession.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identifier of the new update session being created.\nThe result will be an identifier for the resource type: content.library.item.UpdateSession.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session.create_resp"
                        }
                    },
                    "400": {
                        "description": "if there is another update session on the same library item.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.resource_busy_error"
                        }
                    },
                    "404": {
                        "description": "if the item targeted for update does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/update-session/id:{update_session_id}": {
            "get": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Gets the update session with the specified identifier, including the most up-to-date status information for the session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to retrieve.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The UpdateSessionModel instance with the given updateSessionId.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session_resp"
                        }
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}/get"
                }
            },
            "patch": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Updates the properties of an update session. \n This is an incremental update to the update session. Any field in the UpdateSessionModel structure that is unset will not be modified. \n\n This operation will only update the property UpdateSessionModel.warning-behavior of the update session. This will not, for example, update the UpdateSessionModel.library-item-id or UpdateSessionModel.state of an update session. \n\n This operation requires the session to be in the ACTIVE state.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifer of the update session that should be updated.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session specification is not valid.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}/patch"
                }
            },
            "delete": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Deletes an update session. This removes the session and all information associated with it. \n Removing an update session leaves any current transfers for that session in an indeterminate state (there is no guarantee that the server will terminate the transfers, or that the transfers can be completed). However there will no longer be a means of inspecting the status of those uploads except by seeing the effect on the library item. \n\n Update sessions for which there is no upload activity or which are complete will automatically be deleted after a period of time.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifer of the update session to delete.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session is in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}/delete"
                }
            }
        },
        "/rest/com/vmware/content/library/item/update-session/id:{update_session_id}?~action=cancel": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Cancels the update session and sets its state to CANCELED. This operation will free up any temporary resources currently associated with the session. \n This operation is not allowed if the session has been already completed. \n\n Cancelling an update session will cancel any in progress transfers (either uploaded by the client or pulled by the server). Any content that has been already received will be scheduled for deletion.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session that should be canceled.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "cancel",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}?action=cancel/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/update-session/id:{update_session_id}?~action=complete": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Completes the update session. This indicates that the client has finished making all the changes required to the underlying library item. If the client is pushing the content to the server, the library item will be updated once this call returns. If the server is pulling the content, the call may return before the changes become visible. In that case, the client can track the session to know when the server is done. \n This operation requires the session to be in the ACTIVE state. \n\n Depending on the type of the library item associated with this session, a type adapter may be invoked to verify the validity of the files uploaded. The user can explicitly validate the session before completing the session by using the File.validate operation. \n\n Modifications are not visible to other clients unless the session is completed and all necessary files have been received.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session that should be completed.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state, or if some of the files that will be uploaded by the client aren't received correctly.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "complete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}?action=complete/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/update-session/id:{update_session_id}?~action=fail": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Terminates the update session with a client specified error message. \n This is useful in transmitting client side failures (for example, not being able to access a file) to the server side.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to fail.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session_fail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "fail",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}?action=fail/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/update-session/id:{update_session_id}?~action=keep-alive": {
            "post": {
                "tags": [
                    "library/item/update_session"
                ],
                "summary": "Keeps an update session alive. \n If there is no activity for an update session after a period of time, the update session will expire, then be deleted. The update session expiration timeout is configurable in the Content Library Service system configuration. The default is five minutes. Invoking this operation enables a client to specifically extend the lifetime of the update session.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session whose lifetime should be extended.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.update_session_keep_alive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "keep_alive",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}?action=keep-alive/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/updatesession/file": {
            "get": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Lists all files in the library item associated with the update session.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "update_session_id",
                        "description": "Identifier of the update session.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of the files in the library item associated with the update session. This list may be empty if the caller has removed all the files as part of this session (in which case completing the update session will result in an empty library item).",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file.list_resp"
                        }
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}~1file/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/updatesession/file/id:{update_session_id}?~action=add": {
            "post": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Requests file content to be changed (either created, or updated). Depending on the source type of the file, this operation will either return an upload endpoint where the client can push the content, or the server will pull from the provided source endpoint. If a file with the same name already exists in this session, this operation will be used to update the content of the existing file. \n When importing a file directly from storage, where the source endpoint is a file or datastore URI, you will need to have the ContentLibrary.ReadStorage privilege on the library item. If the file is located in the same directory as the library storage backing folder, the server will move the file instead of copying it, thereby allowing instantaneous import of files for efficient backup and restore scenarios. In all other cases, a copy is performed rather than a move.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to be modified.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file_add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An File.Info structure containing upload links as well as server side state tracking the transfer of the file.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file.add_resp"
                        }
                    },
                    "400": {
                        "description": "if the content of the library item associated with the update session has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it.\n if metadata files such as manifest and certificate file are added after the OVF descriptor file. This is applicable to update sessions with library item type OVF only. This error was added in vSphere 6.8.0.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "403": {
                        "description": "if the caller doesn't have ContentLibrary.ReadStorage privilege on the library item of the update session and source type PULL is requested for a file or datastore source endpoint (that is, not HTTP or HTTPs based endpoint).",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "add",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}~1file/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item/updatesession/file/id:{update_session_id}?~action=get": {
            "post": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Retrieves information about a specific file in the snapshot of the library item at the time when the update session was created.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file_get"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the file.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file_resp"
                        }
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the file doesn't exist in the library item associated with the update session.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}~1file~1{file_name}/get"
                }
            }
        },
        "/rest/com/vmware/content/library/item/updatesession/file/id:{update_session_id}?~action=remove": {
            "post": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Requests a file to be removed. The file will only be effectively removed when the update session is completed.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file_remove"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the update session doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the file doesn't exist in the library item associated with the update session.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "remove",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}~1file~1{file_name}/delete"
                }
            }
        },
        "/rest/com/vmware/content/library/item/updatesession/file/id:{update_session_id}?~action=validate": {
            "post": {
                "tags": [
                    "library/item/updatesession/file"
                ],
                "summary": "Validates the files in the update session with the referenced identifier and ensures all necessary files are received. In the case where a file is missing, this operation will return its name in the File.ValidationResult.missing-files set. The user can add the missing files and try re-validating. For other type of errors, File.ValidationResult.invalid-files will contain the list of invalid files.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Anonymous.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "update_session_id",
                        "description": "Identifier of the update session to validate.\nThe parameter must be an identifier for the resource type: content.library.item.UpdateSession."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A validation result containing missing files or invalid files and the reason why they are invalid.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.updatesession.file.validate_resp"
                        }
                    },
                    "404": {
                        "description": "if no update session with the given identifier exists.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the update session is not in the ACTIVE state, or if some of the files that will be uploaded by the client aren't received correctly.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "validate",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1update-session~1{update_session_id}~1file?action=validate/post"
                }
            }
        },
        "/rest/com/vmware/content/library/item?~action=find": {
            "post": {
                "tags": [
                    "library/item"
                ],
                "summary": "Returns identifiers of all the visible (as determined by authorization policy) library items matching the requested Item.FindSpec.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read. \n  -  The resource content.Library referenced by the attribute Item.FindSpec.library-id requires System.Read.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.item_find"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all the visible library items matching the given spec.\nThe result will contain identifiers for the resource type: content.library.Item.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.find_resp"
                        }
                    },
                    "400": {
                        "description": "if no properties are specified in the spec.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "find",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item?action=find/post"
                }
            }
        },
        "/rest/com/vmware/content/library/subscribed-item/id:{library_item_id}?~action=evict": {
            "post": {
                "tags": [
                    "library/subscribed_item"
                ],
                "summary": "Evicts the cached content of a library item in a subscribed library. \n This operation allows the cached content of a library item to be removed to free up storage capacity. This operation will only work when a library item is synchronized on-demand. When a library is not synchronized on-demand, it always attempts to keep its cache up-to-date with the published source. Evicting the library item will set ItemModel.cached to false.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.EvictLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item whose content should be evicted.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library item specified by libraryItemId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the content of the library item specified by libraryItemId has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it. \n For instance, this {@term error) is reported on evicting a library item in an on-demand subscribed library that was restored from backup, and the library item was deleted after backup, thus resulting in its content being deleted from the associated storage backings. In this scenario, the metadata of the library item is present on a restore, while its content has been deleted.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "evict",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1subscribed-item~1{library_item_id}?action=evict/post"
                }
            }
        },
        "/rest/com/vmware/content/library/subscribed-item/id:{library_item_id}?~action=sync": {
            "post": {
                "tags": [
                    "library/subscribed_item"
                ],
                "summary": "Forces the synchronization of an individual library item in a subscribed library. \n Synchronizing an individual item will update that item's metadata from the remote source. If the source library item on the remote library has been deleted, this operation will delete the library item from the subscribed library as well. \n\n The default behavior of the synchronization is determined by the SubscriptionInfo of the library which owns the library item. \n\n   - If SubscriptionInfo.on-demand is true, then the file content is not synchronized by default. In this case, only the library item metadata is synchronized. The file content may still be forcefully synchronized by passing true for the forceSyncContent parameter.\n   - If SubscriptionInfo.on-demand is false, then this call will always synchronize the file content. The forceSyncContent parameter is ignored when the subscription is not on-demand.\n  When the file content has been synchronized, the ItemModel.cached field will be true. \n This operation will return immediately and create an asynchronous task to perform the synchronization.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItemId requires ContentLibrary.SyncLibraryItem.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item_id",
                        "description": "Identifier of the library item to synchronize.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.subscribed_item_sync"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library item specified by libraryItemId could not be found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the content of the library item specified by libraryItemId has been deleted from the storage backings (see LibraryModel#storageBackings) associated with it. \n For instance, this {@term error) is reported on synchronizing a library item in a subscribed library that was restored from backup, and the library item was deleted after backup, thus resulting in its content being deleted from the associated storage backings. In this scenario, the metadata of the library item is present on a restore, while its content has been deleted.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "sync",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1subscribed-item~1{library_item_id}?action=sync/post"
                }
            }
        },
        "/rest/com/vmware/content/library/subscriptions": {
            "get": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Lists the subscriptions of the published library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of commonly used information about subscriptions of the published library.",
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions.list_resp"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library}~1subscriptions/get"
                }
            }
        },
        "/rest/com/vmware/content/library/subscriptions/id:{library}": {
            "patch": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Updates the specified subscription of the published library. \n This is an incremental update to the subscription. Except for the Subscriptions.UpdateSpecPlacement structure, fields that are unset in the update specification will be left unchanged. If spec#subscribedLibraryPlacement is specified, all fields of the current subscribed library placement will be replaced by this placement.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires ContentLibrary.UpdateSubscription.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.\n If the subscription specified by subscription does not exist for the library specified by library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library}~1subscriptions~1{subscription}/patch"
                }
            },
            "post": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Creates a subscription of the published library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires ContentLibrary.AddSubscription.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription identifier.\nThe result will be an identifier for the resource type: content.library.Subscriptions.",
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions.create_resp"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.\n If the subscribed library specified by subscribedLibrary#subscribedLibrary does not exist at the vCenter instance specified by subscribedLibrary#vcenter.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library}~1subscriptions/post"
                }
            }
        },
        "/rest/com/vmware/content/library/subscriptions/id:{library}?~action=delete": {
            "post": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Deletes the specified subscription of the published library. The subscribed library associated with the subscription will not be deleted.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires ContentLibrary.DeleteSubscription.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions_delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.\n If the subscription specified by subscription does not exist for the library specified by library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library}~1subscriptions~1{subscription}/delete"
                }
            }
        },
        "/rest/com/vmware/content/library/subscriptions/id:{library}?~action=get": {
            "post": {
                "tags": [
                    "library/subscriptions"
                ],
                "summary": "Returns information about the specified subscription of the published library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter library requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions_get"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the subscription.",
                        "schema": {
                            "$ref": "#/definitions/content.library.subscriptions_resp"
                        }
                    },
                    "400": {
                        "description": "If the library specified by library is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library specified by library does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1{library}~1subscriptions~1{subscription}/get"
                }
            }
        },
        "/rest/com/vmware/content/library?~action=find": {
            "post": {
                "tags": [
                    "library"
                ],
                "summary": "Returns a list of all the visible (as determined by authorization policy) libraries matching the requested Library.FindSpec.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.library_find"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all the visible libraries matching the given spec.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "$ref": "#/definitions/content.library.find_resp"
                        }
                    },
                    "400": {
                        "description": "if no properties are specified in the spec.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_argument_error"
                        }
                    }
                },
                "operationId": "find",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library?action=find/post"
                }
            }
        },
        "/rest/com/vmware/content/local-library": {
            "get": {
                "tags": [
                    "local_library"
                ],
                "summary": "Returns the identifiers of all local libraries in the Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all local libraries in the Content Library.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "$ref": "#/definitions/content.local_library.list_resp"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1local-library/get"
                }
            },
            "post": {
                "tags": [
                    "local_library"
                ],
                "summary": "Creates a new local library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.CreateLocalLibrary. \n  -  The resource Datastore referenced by the attribute StorageBacking.datastore-id requires Datastore.AllocateSpace.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.local_library_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identifier of the newly created LibraryModel.\nThe result will be an identifier for the resource type: content.Library.",
                        "schema": {
                            "$ref": "#/definitions/content.local_library.create_resp"
                        }
                    },
                    "400": {
                        "description": "if using multiple storage backings.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unsupported_error"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1local-library/post"
                }
            }
        },
        "/rest/com/vmware/content/local-library/id:{library_id}": {
            "get": {
                "tags": [
                    "local_library"
                ],
                "summary": "Returns a given local library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the local library to return.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The LibraryModel instance associated with libraryId.",
                        "schema": {
                            "$ref": "#/definitions/content.local_library_resp"
                        }
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the library specified by libraryId is not a local library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_element_type_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1local-library~1{library_id}/get"
                }
            },
            "patch": {
                "tags": [
                    "local_library"
                ],
                "summary": "Updates the properties of a local library. \n This is an incremental update to the local library. Fields that are unset in the update specification will be left unchanged.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.UpdateLocalLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the local library to update.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.local_library_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the LibraryModel.version of updateSpec is not equal to the current version of the library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.concurrent_change_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1local-library~1{library_id}/patch"
                }
            },
            "delete": {
                "tags": [
                    "local_library"
                ],
                "summary": "Deletes the specified local library. \n Deleting a local library will remove the entry immediately and begin an asynchronous task to remove all cached content for the library. If the asynchronous task fails, file content may remain on the storage backing. This content will require manual removal.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.DeleteLocalLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the local library to delete.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the library contains a library item that cannot be deleted in its current state. For example, the library item contains a virtual machine template and a virtual machine is checked out of the library item.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1local-library~1{library_id}/delete"
                }
            }
        },
        "/rest/com/vmware/content/local-library/id:{library_id}?~action=publish": {
            "post": {
                "tags": [
                    "local_library"
                ],
                "summary": "Publishes the library to specified subscriptions. If no subscriptions are specified, then publishes the library to all its subscriptions.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.PublishLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the published library.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "schema": {
                            "$ref": "#/definitions/content.local_library_publish"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "If the library specified by libraryId is not a published library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    },
                    "404": {
                        "description": "If the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "If the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "If the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    }
                },
                "operationId": "publish",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1local-library~1{library_id}?action=publish/post"
                }
            }
        },
        "/rest/com/vmware/content/subscribed-library": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Creates a new subscribed library. \n Once created, the subscribed library will be empty. If the LibraryModel.subscription-info property is set, the Content Library Service will attempt to synchronize to the remote source. This is an asynchronous operation so the content of the published library may not immediately appear.\n\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.CreateSubscribedLibrary. \n  -  The resource Datastore referenced by the attribute StorageBacking.datastore-id requires Datastore.AllocateSpace.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identifier of the newly created subscribed library.\nThe result will be an identifier for the resource type: content.Library.",
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library.create_resp"
                        }
                    },
                    "400": {
                        "description": "if subscribing to a published library which cannot be accessed.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.resource_inaccessible_error"
                        }
                    }
                },
                "operationId": "create",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library/post"
                }
            },
            "get": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Returns the identifiers of all subscribed libraries in the Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires System.Read.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of identifiers of all subscribed libraries in the Content Library.\nThe result will contain identifiers for the resource type: content.Library.",
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library.list_resp"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library/get"
                }
            }
        },
        "/rest/com/vmware/content/subscribed-library/id:{library_id}": {
            "patch": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Updates the properties of a subscribed library. \n This is an incremental update to the subscribed library. Fields that are unset in the update specification will be left unchanged.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.UpdateSubscribedLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to update.\nThe parameter must be an identifier for the resource type: content.Library."
                    },
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the LibraryModel.version of updateSpec is not equal to the current version of the library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.concurrent_change_error"
                        }
                    }
                },
                "operationId": "update",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library~1{library_id}/patch"
                }
            },
            "delete": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Deletes the specified subscribed library. \n Deleting a subscribed library will remove the entry immediately and begin an asynchronous task to remove all cached content for the library. If the asynchronous task fails, file content may remain on the storage backing. This content will require manual removal.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.DeleteSubscribedLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to delete.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "if the library referenced by libraryId is not a subscribed library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_element_type_error"
                        }
                    },
                    "404": {
                        "description": "if the library referenced by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    }
                },
                "operationId": "delete",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library~1{library_id}/delete"
                }
            },
            "get": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Returns a given subscribed library.\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to return.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The LibraryModel instance that corresponds to libraryId.",
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library_resp"
                        }
                    },
                    "404": {
                        "description": "if the library associated with libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the library associated with libraryId is not a subscribed library.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.invalid_element_type_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library~1{library_id}/get"
                }
            }
        },
        "/rest/com/vmware/content/subscribed-library/id:{library_id}?~action=evict": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Evicts the cached content of an on-demand subscribed library. \n This operation allows the cached content of a subscribed library to be removed to free up storage capacity. This operation will only work when a subscribed library is synchronized on-demand.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.EvictSubscribedLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library whose content should be evicted.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the library specified by libraryId does not synchronize on-demand, or if the content of the library specified by libraryId has been deleted from the storage backings (see LibraryModel.storage-backings) associated with it. \n For instance, this {@term error) is reported on evicting an on-demand subscribed library that was restored from backup, and the library was deleted after the backup was taken, thus resulting in its content being deleted from the associated storage backings. In this scenario, the metadata of the library is present on a restore, while its content has been deleted.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state_error"
                        }
                    }
                },
                "operationId": "evict",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library~1{library_id}?action=evict/post"
                }
            }
        },
        "/rest/com/vmware/content/subscribed-library/id:{library_id}?~action=sync": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Forces the synchronization of the subscribed library. \n Synchronizing a subscribed library forcefully with this operation will perform the same synchronization behavior as would run periodically for the library. The SubscriptionInfo.on-demand setting is respected. Calling this operation on a library that is already in the process of synchronizing will have no effect.\n\nif you do not have all of the privileges described as follows: \n   -  The resource content.Library referenced by the parameter libraryId requires ContentLibrary.SyncLibrary.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_id",
                        "description": "Identifier of the subscribed library to synchronize.\nThe parameter must be an identifier for the resource type: content.Library."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "if the library specified by libraryId does not exist.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "400": {
                        "description": "if the published library cannot be contacted or found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.resource_inaccessible_error"
                        }
                    }
                },
                "operationId": "sync",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library~1{library_id}?action=sync/post"
                }
            }
        },
        "/rest/com/vmware/content/subscribed-library?~action=probe": {
            "post": {
                "tags": [
                    "subscribed_library"
                ],
                "summary": "Probes remote library subscription information, including URL, SSL certificate and password. The resulting SubscribedLibrary.ProbeResult structure describes whether or not the subscription configuration is successful.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.ProbeSubscription.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request_body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library_probe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The subscription info probe result.",
                        "schema": {
                            "$ref": "#/definitions/content.subscribed_library.probe_resp"
                        }
                    }
                },
                "operationId": "probe",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1subscribed-library?action=probe/post"
                }
            }
        },
        "/rest/com/vmware/content/type": {
            "get": {
                "tags": [
                    "type"
                ],
                "summary": "Returns a list of Type.Info instances which describe the type support plugins in a Content Library.\nif you do not have all of the privileges described as follows: \n   -  Operation execution requires ContentLibrary.TypeIntrospection.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The list of Type.Info instances which describe the type support plugins in a Content Library.",
                        "schema": {
                            "$ref": "#/definitions/content.type.list_resp"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1type/get"
                }
            }
        },
        "/rest/content/library/item/{library_item}/changes": {
            "get": {
                "tags": [
                    "library/item/changes"
                ],
                "summary": "Returns commonly used information about the content changes made to a library item.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItem requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item",
                        "description": "Library item identifier.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of commonly used information about the library item changes.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.changes.list_resp"
                        }
                    },
                    "404": {
                        "description": "if the library item is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "if the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "list",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item}~1changes/get"
                }
            }
        },
        "/rest/content/library/item/{library_item}/changes/{version}": {
            "get": {
                "tags": [
                    "library/item/changes"
                ],
                "summary": "Returns information about a library item change.\nif you do not have all of the privileges described as follows: \n   -  The resource content.library.Item referenced by the parameter libraryItem requires System.Read.",
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "library_item",
                        "description": "Library item identifer.\nThe parameter must be an identifier for the resource type: content.library.Item."
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "version",
                        "description": "Library item version.\nThe parameter must be an identifier for the resource type: content.library.item.Version."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the specified library item change.",
                        "schema": {
                            "$ref": "#/definitions/content.library.item.changes_resp"
                        }
                    },
                    "404": {
                        "description": "if the library item or version is not found.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.not_found_error"
                        }
                    },
                    "401": {
                        "description": "if the user that requested the operation cannot be authenticated.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthenticated_error"
                        }
                    },
                    "403": {
                        "description": "if the user that requested the operation is not authorized to perform the operation.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.unauthorized_error"
                        }
                    },
                    "400": {
                        "description": "if the system reports an error while responding to the request.",
                        "schema": {
                            "$ref": "#/definitions/vapi.std.errors.error_error"
                        }
                    }
                },
                "operationId": "get",
                "security": [
                    {
                        "session_id": []
                    }
                ],
                "deprecated": true,
                "x-vmw-deprecated": {
                    "replacement": "api_content.json#/paths/~1api~1content~1library~1item~1{library_item}~1changes~1{version}/get"
                }
            }
        }
    },
    "definitions": {
        "ContentConfigurationModel": {
            "type": "object",
            "properties": {
                "automatic_sync_enabled": {
                    "description": "Whether automatic synchronization is enabled. \n When automatic synchronization is enabled, the Content Library Service will automatically synchronize all subscribed libraries on a daily basis. Subscribed libraries with the SubscriptionInfo.automatic-sync-enabled flag turned on will be synchronized every hour between ConfigurationModel.automatic-sync-start-hour and ConfigurationModel.automatic-sync-stop-hour.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                },
                "automatic_sync_start_hour": {
                    "description": "The hour at which the automatic synchronization will start. This value is between 0 (midnight) and 23 inclusive.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "automatic_sync_stop_hour": {
                    "description": "The hour at which the automatic synchronization will stop. Any active synchronization operation will continue to run, however no new synchronization operations will be triggered after the stop hour. This value is between 0 (midnight) and 23 inclusive.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "maximum_concurrent_item_syncs": {
                    "description": "The maximum allowed number of library items to synchronize concurrently from remote libraries. This must be a positive number. The service may not be able to guarantee the requested concurrency if there is no available capacity. \n This setting is global across all subscribed libraries.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContentConfigurationUpdate": {
            "$ref": "#/definitions/ContentConfigurationModel",
            "description": "The ConfigurationModel specifying the settings to update."
        },
        "ContentLibraryFind": {
            "$ref": "#/definitions/ContentLibraryFindSpec",
            "description": "Specification describing what properties to filter on."
        },
        "ContentLibraryFindSpec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the library to search. The name is case-insensitive. See LibraryModel.name.\nIf not specified any name will be searched.",
                    "type": "string"
                },
                "type": {
                    "description": "Library type to search. See LibraryModel.type.\nIf not specified any library type will be searched.",
                    "$ref": "#/definitions/ContentLibraryModelLibraryType"
                }
            }
        },
        "ContentLibraryItemCertVerificationStatus": {
            "type": "string",
            "description": "The CertVerificationStatus enumerated type defines the certificate verification status of a library item. Currently applicable only to ovf item type",
            "enum": [
                "NOT_AVAILABLE",
                "VERIFIED",
                "INTERNAL",
                "VERIFICATION_FAILURE",
                "VERIFICATION_IN_PROGRESS",
                "UNTRUSTED"
            ]
        },
        "ContentLibraryItemCertificateVerificationInfo": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The certificate verification status of item.",
                    "$ref": "#/definitions/ContentLibraryItemCertVerificationStatus"
                },
                "cert_chain": {
                    "description": "A certificate in base64 encoding.\nCertificate chain is unset if the item not signed",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "status"
            ]
        },
        "ContentLibraryItemChangesInfo": {
            "type": "object",
            "properties": {
                "time": {
                    "description": "The date and time when the item content was changed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "The user who made the content change.\nThis field will be unset if the user could not be determined.",
                    "type": "string"
                },
                "message": {
                    "description": "The full message describing the content change.\nThis field will be unset if a message was not provided when the item content was changed.",
                    "type": "string"
                }
            },
            "required": [
                "time"
            ]
        },
        "ContentLibraryItemChangesSummary": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "The version of the library item.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.Version. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.Version.",
                    "type": "string"
                },
                "time": {
                    "description": "The date and time when the item content was changed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "The user who made the content change.\nThis field will be unset if the user could not be determined.",
                    "type": "string"
                },
                "short_message": {
                    "description": "The short message describing the content change. The message is truncated to the first 80 characters or first non-leading newline character, whichever length is shorter.\nThis field will be unset if a message was not provided when the item content was changed.",
                    "type": "string"
                }
            },
            "required": [
                "version",
                "time"
            ]
        },
        "ContentLibraryItemCopy": {
            "$ref": "#/definitions/ContentLibraryItemModel",
            "description": "Specification for the new library item to be created."
        },
        "ContentLibraryItemCreate": {
            "$ref": "#/definitions/ContentLibraryItemModel",
            "description": "Specification that defines the properties of the new library item."
        },
        "ContentLibraryItemDestinationSpec": {
            "type": "object",
            "properties": {
                "subscription": {
                    "description": "Identifier of the subscription associated with the subscribed library.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                }
            },
            "required": [
                "subscription"
            ]
        },
        "ContentLibraryItemDownloadSessionCreate": {
            "$ref": "#/definitions/ContentLibraryItemDownloadSessionModel",
            "description": "Specification for the new download session to be created."
        },
        "ContentLibraryItemDownloadSessionFail": {
            "type": "object",
            "properties": {
                "client_error_message": {
                    "type": "string",
                    "description": "Client side error message. This can be useful in providing some extra details about the client side failure. Note that the message won't be translated to the user's locale."
                }
            },
            "required": [
                "client_error_message"
            ]
        },
        "ContentLibraryItemDownloadSessionKeepAlive": {
            "type": "object",
            "properties": {
                "progress": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional update to the progress property of the session. If specified, the new progress should be greater then the current progress. See DownloadSessionModel.client-progress.\nIf not specified the progress is not updated."
                }
            }
        },
        "ContentLibraryItemDownloadSessionModel": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier of this download session.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.DownloadSession. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.DownloadSession.",
                    "type": "string"
                },
                "library_item_id": {
                    "description": "The identifier of the library item whose content is being downloaded.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "library_item_content_version": {
                    "description": "The content version of the library item whose content is being downloaded. This value is the ItemModel.content-version at the time when the session is created for the library item.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string"
                },
                "error_message": {
                    "description": "If the session is in the ERROR status this property will have more details about the error.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/VapiStdLocalizableMessage"
                },
                "client_progress": {
                    "description": "The progress that has been made with the download. This property is to be updated by the client during the download process to indicate the progress of its work in completing the download. The initial progress is 0 until updated by the client. The maximum value is 100, which indicates that the download is complete.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "description": "The current state (State) of the download session.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/ContentLibraryItemDownloadSessionModelState"
                },
                "expiration_time": {
                    "description": "Indicates the time after which the session will expire. The session is guaranteed not to expire before this time.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ContentLibraryItemDownloadSessionModelState": {
            "type": "string",
            "description": "The state of the download session.",
            "enum": [
                "ACTIVE",
                "CANCELED",
                "ERROR"
            ]
        },
        "ContentLibraryItemDownloadsessionFileEndpointType": {
            "type": "string",
            "description": "The File.EndpointType enumerated type defines the types of endpoints used to download the file.",
            "enum": [
                "HTTPS",
                "DIRECT"
            ]
        },
        "ContentLibraryItemDownloadsessionFileInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "size": {
                    "description": "The file size, in bytes.\nThis field may not be available immediately. It is guaranteed to be set when the client finishes downloading the file.",
                    "type": "integer",
                    "format": "int64"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by the server so far for making this file prepared for download. This value may stay at zero till the client starts downloading the file.",
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "description": "The preparation status (PrepareStatus) of the file.",
                    "$ref": "#/definitions/ContentLibraryItemDownloadsessionFilePrepareStatus"
                },
                "download_endpoint": {
                    "description": "Endpoint at which the file is available for download. The value is valid only when the File.Info.status is PREPARED.\nThis field won't be set until the file status is PREPARED.",
                    "$ref": "#/definitions/ContentLibraryItemTransferEndpoint"
                },
                "checksum_info": {
                    "description": "The checksum information of the file. When the download is complete, you can retrieve the checksum from the File.get operation to verify the checksum for the downloaded file.\nThe checksum is always calculated for the downloaded file, but this field won't be set until the download is complete.",
                    "$ref": "#/definitions/ContentLibraryItemFileChecksumInfo"
                },
                "error_message": {
                    "description": "Error message for a failed preparation when the prepare status is ERROR.\nThis field won't be set unless there was an error with the file transfer.",
                    "$ref": "#/definitions/VapiStdLocalizableMessage"
                }
            },
            "required": [
                "name",
                "bytes_transferred",
                "status"
            ]
        },
        "ContentLibraryItemDownloadsessionFilePrepare": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "Name of the file requested for download."
                },
                "endpoint_type": {
                    "$ref": "#/definitions/ContentLibraryItemDownloadsessionFileEndpointType",
                    "description": "Endpoint type request, one of EndpointType. This will determine the type of the File.Info.download-endpoint that is generated when the file is prepared. The DIRECT is only available to users who have the ContentLibrary.ReadStorage privilege.\nIf not specified the default is HTTPS."
                }
            },
            "required": [
                "file_name"
            ]
        },
        "ContentLibraryItemDownloadsessionFilePrepareStatus": {
            "type": "string",
            "description": "The File.PrepareStatus enumerated type defines the state of the file in preparation for download.",
            "enum": [
                "UNPREPARED",
                "PREPARE_REQUESTED",
                "PREPARING",
                "PREPARED",
                "ERROR"
            ]
        },
        "ContentLibraryItemFileChecksumAlgorithm": {
            "type": "string",
            "description": "The File.ChecksumAlgorithm enumerated type defines the valid checksum algorithms.",
            "enum": [
                "SHA1",
                "MD5",
                "SHA256",
                "SHA512"
            ]
        },
        "ContentLibraryItemFileChecksumInfo": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "The checksum algorithm (ChecksumAlgorithm) used to calculate the checksum.\nIf not specified the default checksum algorithm is SHA1.",
                    "$ref": "#/definitions/ContentLibraryItemFileChecksumAlgorithm"
                },
                "checksum": {
                    "description": "The checksum value calculated with File.ChecksumInfo.algorithm.",
                    "type": "string"
                }
            },
            "required": [
                "checksum"
            ]
        },
        "ContentLibraryItemFileInfo": {
            "type": "object",
            "properties": {
                "checksum_info": {
                    "description": "A checksum for validating the content of the file. \n This value can be used to verify that a transfer was completed without errors.\n\nA checksum cannot always be calculated, and the value will be unset if the file does not have content.",
                    "$ref": "#/definitions/ContentLibraryItemFileChecksumInfo"
                },
                "name": {
                    "description": "The name of the file. \n This value will be unique within the library item for each file. It cannot be an empty string.",
                    "type": "string"
                },
                "size": {
                    "description": "The file size, in bytes. The file size is the storage used and not the uploaded or provisioned size. For example, when uploading a disk to a datastore, the amount of storage that the disk consumes may be different from the disk file size. When the file is not cached, the size is 0.",
                    "type": "integer",
                    "format": "int64"
                },
                "cached": {
                    "description": "Indicates whether the file is on disk or not.",
                    "type": "boolean"
                },
                "version": {
                    "description": "The version of this file; incremented when a new copy of the file is uploaded.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "size",
                "cached",
                "version"
            ]
        },
        "ContentLibraryItemFind": {
            "$ref": "#/definitions/ContentLibraryItemFindSpec",
            "description": "Specification describing what properties to filter on."
        },
        "ContentLibraryItemFindSpec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the library item. The name is case-insensitive. See ItemModel.name.\nIf not specified all library item names are searched.",
                    "type": "string"
                },
                "library_id": {
                    "description": "The identifier of the library containing the item. See ItemModel.library-id.\nIf not specified all libraries are searched.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "source_id": {
                    "description": "The identifier of the library item as reported by the publisher. See ItemModel.source-id.\nIf not specified all library items are searched.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the library item. The type is case-insensitive. See ItemModel.type.\nIf not specified all types are searched.",
                    "type": "string"
                },
                "cached": {
                    "description": "Whether the item is cached. Possible values are 'true' or 'false'. See ItemModel.cached.\nIf not specified all library items are searched.",
                    "type": "boolean"
                }
            }
        },
        "ContentLibraryItemModel": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "A unique identifier for this library item.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "library_id": {
                    "description": "The identifier of the LibraryModel to which this item belongs.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "content_version": {
                    "description": "The latest version of the file content list of this library item.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.Version. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.Version.",
                    "type": "string"
                },
                "creation_time": {
                    "description": "The date and time when this library item was created.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "A human-readable description for this library item.\nThis field is optional for the create operation. Leaving it unset during creation will result in an empty string value. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that the description remains unchanged.",
                    "type": "string"
                },
                "last_modified_time": {
                    "description": "The date and time when the metadata for this library item was last changed. \n This field is affected by changes to the properties or file content of this item. It is not modified by changes to the tags of the item, or by changes to the library which owns this item.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "last_sync_time": {
                    "description": "The date and time when this library item was last synchronized. \n This field is updated every time a synchronization is triggered on the library item, including when a synchronization is triggered on the library to which this item belongs. The value is unset for a library item that belongs to a local library.\n\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "metadata_version": {
                    "description": "A version number for the metadata of this library item. \n This value is incremented with each change to the metadata of this item. Changes to name, description, and so on will increment this value. The value is not incremented by changes to the content or tags of the item or the library which owns it.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for this library item. \n The name may not be unset or an empty string. The name does not have to be unique, even within the same library.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "cached": {
                    "description": "The status that indicates whether the library item is on disk or not. The library item is cached when all its files are on disk.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "boolean"
                },
                "size": {
                    "description": "The library item size, in bytes. The size is the sum of the size used on the storage backing for all the files in the item. When the library item is not cached, the size is 0.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "description": "An optional type identifier which indicates the type adapter plugin to use. \n This field may be set to a non-empty string value that corresponds to an identifier supported by a type adapter plugin present in the Content Library Service. A type adapter plugin, if present for the specified type, can provide additional information and services around the item content. A type adapter can guide the upload process by creating file entries that are in need of being uploaded to complete an item. \n\n The types and plugins supported by the Content Library Service can be queried using the Type service.\n\nThis field is optional for the create and update operations. During creation, if the type is left unspecified, or if the type is specified but does not have a corresponding type support plugin, then the type of the library item is considered to be generic and all data is treated as generic files. During update, if the type is not specified, then it is not updated.",
                    "type": "string"
                },
                "version": {
                    "description": "A version number that is updated on metadata changes. This value is used to validate update requests to provide optimistic concurrency of changes. \n This value represents a number that is incremented every time library item properties, such as name or description, are changed. It is not incremented by changes to the file content of the library item, including adding or removing files. It is also not affected by tagging the library item.\n\nThis field is not used for the create operation. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that you do not need to detect concurrent updates.",
                    "type": "string"
                },
                "source_id": {
                    "description": "The identifier of the ItemModel to which this item is synchronized to if the item belongs to a subscribed library. The value is unset for a library item that belongs to a local library.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "security_compliance": {
                    "description": "Shows the security compliance of ItemModel.\nThis field is not used for the create and update operations. It will be present in the result of a get or list operation.",
                    "type": "boolean"
                },
                "certificate_verification_info": {
                    "description": "Certificate verification status and ItemModel's signing certificate . Currently, this field is available only in following cases 1. This item belongs to a secure content library 2. The item is of type ovf.\nThis field is not used for the create and update operations. It may be present in the result of a get or list operation.",
                    "$ref": "#/definitions/ContentLibraryItemCertificateVerificationInfo"
                }
            }
        },
        "ContentLibraryItemPublish": {
            "type": "object",
            "properties": {
                "force_sync_content": {
                    "type": "boolean",
                    "description": "Whether to synchronize file content as well as metadata. This parameter applies only if the subscription is on-demand."
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLibraryItemDestinationSpec"
                    },
                    "description": "The list of subscriptions to publish this library item to."
                }
            },
            "required": [
                "force_sync_content"
            ]
        },
        "ContentLibraryItemStorageInfo": {
            "type": "object",
            "properties": {
                "storage_backing": {
                    "description": "The storage backing on which this object resides. This might not be the same as the default storage backing associated with the library.",
                    "$ref": "#/definitions/ContentLibraryStorageBacking"
                },
                "storage_uris": {
                    "description": "URIs that identify the file on the storage backing. \n These URIs may be specific to the backing and may need interpretation by the client. A client that understands a URI scheme in this list may use that URI to directly access the file on the storage backing. This can provide high-performance support for file manipulation.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "checksum_info": {
                    "description": "A checksum for validating the content of the file. \n This value can be used to verify that a transfer was completed without errors.\n\nA checksum cannot always be calculated, and the value will be unset if the file does not have content.",
                    "$ref": "#/definitions/ContentLibraryItemFileChecksumInfo"
                },
                "name": {
                    "description": "The name of the file. \n This value will be unique within the library item for each file. It cannot be an empty string.",
                    "type": "string"
                },
                "size": {
                    "description": "The file size, in bytes. The file size is the storage used and not the uploaded or provisioned size. For example, when uploading a disk to a datastore, the amount of storage that the disk consumes may be different from the disk file size. When the file is not cached, the size is 0.",
                    "type": "integer",
                    "format": "int64"
                },
                "cached": {
                    "description": "Indicates whether the file is on disk or not.",
                    "type": "boolean"
                },
                "version": {
                    "description": "The version of this file; incremented when a new copy of the file is uploaded.",
                    "type": "string"
                }
            },
            "required": [
                "storage_backing",
                "storage_uris",
                "name",
                "size",
                "cached",
                "version"
            ]
        },
        "ContentLibraryItemTransferEndpoint": {
            "type": "object",
            "properties": {
                "uri": {
                    "description": "Transfer endpoint URI. The supported URI schemes are: http, https, and ds. \n An endpoint URI with the ds scheme specifies the location of the file on the datastore. The format of the datastore URI is: \n\n   - ds:///vmfs/volumes/uuid/path\n  \n When the transfer endpoint is a datastore location, the server can import the file directly from the storage backing without the overhead of streaming over HTTP.",
                    "type": "string",
                    "format": "uri"
                },
                "ssl_certificate_thumbprint": {
                    "description": "Thumbprint of the expected SSL certificate for this endpoint. Only used for HTTPS connections. The thumbprint is the SHA-1 hash of the DER encoding of the remote endpoint's SSL certificate. If set, the remote endpoint's SSL certificate is only accepted if it matches this thumbprint, and no other certificate validation is performed. The specified sslCertificateThumbprint will not be checked for SSL certificate validation if {TransferEndpoint#sslCertificate} is also set.\nIf unset, standard certificate validation is performed.",
                    "type": "string"
                }
            },
            "required": [
                "uri"
            ]
        },
        "ContentLibraryItemTransferStatus": {
            "type": "string",
            "description": "The TransferStatus enumerated type defines the transfer state of a file.",
            "enum": [
                "WAITING_FOR_TRANSFER",
                "TRANSFERRING",
                "READY",
                "VALIDATING",
                "ERROR"
            ]
        },
        "ContentLibraryItemUpdate": {
            "$ref": "#/definitions/ContentLibraryItemModel",
            "description": "Specification of the properties to set."
        },
        "ContentLibraryItemUpdateSessionCreate": {
            "$ref": "#/definitions/ContentLibraryItemUpdateSessionModel",
            "description": "Specification for the new update session to be created."
        },
        "ContentLibraryItemUpdateSessionFail": {
            "type": "object",
            "properties": {
                "client_error_message": {
                    "type": "string",
                    "description": "Client side error message. This can be useful in providing some extra details about the client side failure. Note that the message won't be translated to the user's locale."
                }
            },
            "required": [
                "client_error_message"
            ]
        },
        "ContentLibraryItemUpdateSessionKeepAlive": {
            "type": "object",
            "properties": {
                "client_progress": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional update to the progress property of the session. If specified, the new progress should be greater then the current progress. See UpdateSessionModel.client-progress.\nIf not specified the progress is not updated."
                }
            }
        },
        "ContentLibraryItemUpdateSessionModel": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier of this update session.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.UpdateSession. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.UpdateSession.",
                    "type": "string"
                },
                "library_item_id": {
                    "description": "The identifier of the library item to which content will be uploaded or removed.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "library_item_content_version": {
                    "description": "The content version of the library item whose content is being modified. This value is the ItemModel.content-version at the time when the session is created for the library item.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string"
                },
                "error_message": {
                    "description": "If the session is in the ERROR status this property will have more details about the error.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/VapiStdLocalizableMessage"
                },
                "client_progress": {
                    "description": "The progress that has been made with the upload. This property is to be updated by the client during the upload process to indicate the progress of its work in completing the upload. The initial progress is 0 until updated by the client. The maximum value is 100, which indicates that the update is complete.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "description": "The current state (State) of the update session.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/ContentLibraryItemUpdateSessionModelState"
                },
                "expiration_time": {
                    "description": "Indicates the time after which the session will expire. The session is guaranteed not to expire earlier than this time.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "preview_info": {
                    "description": "A preview of the files currently being uploaded in the session. This property will be set only when the session is in the ACTIVE.\nThis field is optional and it is only relevant when the value of UpdateSessionModel.state is ACTIVE.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionPreviewInfo"
                },
                "warning_behavior": {
                    "description": "Indicates the update session behavior if warnings are raised in the session preview. Any warning which is raised by session preview but not ignored by the client will, by default, fail the update session.\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLibraryItemUpdatesessionWarningBehavior"
                    }
                }
            }
        },
        "ContentLibraryItemUpdateSessionModelState": {
            "type": "string",
            "description": "The state of an update session.",
            "enum": [
                "ACTIVE",
                "DONE",
                "ERROR",
                "CANCELED"
            ]
        },
        "ContentLibraryItemUpdateSessionUpdate": {
            "$ref": "#/definitions/ContentLibraryItemUpdateSessionModel",
            "description": "Specification for the new property values to be set on the update session."
        },
        "ContentLibraryItemUpdatesessionCertificateInfo": {
            "type": "object",
            "properties": {
                "issuer": {
                    "description": "Certificate issuer. For example: /C=US/ST=California/L=Palo Alto/O=VMware, Inc.",
                    "type": "string"
                },
                "subject": {
                    "description": "Certificate subject. For example: C=US/ST=Massachusetts/L=Hopkinton/O=EMC Corporation/OU=EMC Avamar/CN=EMC Corporation.",
                    "type": "string"
                },
                "self_signed": {
                    "description": "Whether the certificate is self-signed.",
                    "type": "boolean"
                },
                "x509": {
                    "description": "The X509 representation of the certificate.",
                    "type": "string"
                }
            },
            "required": [
                "issuer",
                "subject",
                "self_signed",
                "x509"
            ]
        },
        "ContentLibraryItemUpdatesessionFileAdd": {
            "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileAddSpec",
            "description": "Specification for the file that needs to be added or updated. This includes whether the client wants to push the content or have the server pull it."
        },
        "ContentLibraryItemUpdatesessionFileAddSpec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file being uploaded.",
                    "type": "string"
                },
                "source_type": {
                    "description": "The source type (SourceType) from which the file content will be retrieved.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileSourceType"
                },
                "source_endpoint": {
                    "description": "Location from which the Content Library Service will fetch the file, rather than requiring a client to upload the file.\nThis field is optional and it is only relevant when the value of File.AddSpec.source-type is PULL.",
                    "$ref": "#/definitions/ContentLibraryItemTransferEndpoint"
                },
                "size": {
                    "description": "The file size, in bytes.\nIf unset, the server will not verify it received the correct size.",
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_info": {
                    "description": "The checksum of the file. If specified, the server will verify the checksum once the file is received. If there is a mismatch, the upload will fail. For ova files, this value should not be set.\nIf unset, the server will not verify the checksum.",
                    "$ref": "#/definitions/ContentLibraryItemFileChecksumInfo"
                }
            },
            "required": [
                "name",
                "source_type"
            ]
        },
        "ContentLibraryItemUpdatesessionFileInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "source_type": {
                    "description": "The source type (SourceType) from which the file is being retrieved. This may be NONE if the file is not being changed.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileSourceType"
                },
                "size": {
                    "description": "The file size, in bytes as received by the server. This field is guaranteed to be set when the server has completely received the file.\nThis field won't be set until the file status is READY.",
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_info": {
                    "description": "The checksum information of the file received by the server.\nIf unset, the server does not verify the checksum.",
                    "$ref": "#/definitions/ContentLibraryItemFileChecksumInfo"
                },
                "source_endpoint": {
                    "description": "A source endpoint from which to retrieve the file.\nThis field is optional and it is only relevant when the value of File.Info.source-type is PULL.",
                    "$ref": "#/definitions/ContentLibraryItemTransferEndpoint"
                },
                "upload_endpoint": {
                    "description": "An upload endpoint to which the client can push the content.\nThis field is optional and it is only relevant when the value of File.Info.source-type is PUSH.",
                    "$ref": "#/definitions/ContentLibraryItemTransferEndpoint"
                },
                "bytes_transferred": {
                    "description": "The number of bytes of this file that have been received by the server.",
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "description": "The transfer status (TransferStatus) of this file.",
                    "$ref": "#/definitions/ContentLibraryItemTransferStatus"
                },
                "error_message": {
                    "description": "Details about the transfer error.\nAn error message is set if the status is ERROR.",
                    "$ref": "#/definitions/VapiStdLocalizableMessage"
                },
                "keep_in_storage": {
                    "description": "Whether or not the file will be kept in storage upon update session completion. The flag is true for most files, and false for metadata files such as manifest and certificate file of update session with library item type OVF. Any file with File.Info.keep-in-storage set to false will not show up in the list of files returned from File.list upon update session completion.\nIf unset, the file will be kept in storage upon update session completion.",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "source_type",
                "bytes_transferred",
                "status"
            ]
        },
        "ContentLibraryItemUpdatesessionFileSourceType": {
            "type": "string",
            "description": "The File.SourceType enumerated type defines how the file content is retrieved.",
            "enum": [
                "NONE",
                "PUSH",
                "PULL"
            ]
        },
        "ContentLibraryItemUpdatesessionFileValidationError": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "error_message": {
                    "description": "A message indicating why the file was considered invalid.",
                    "$ref": "#/definitions/VapiStdLocalizableMessage"
                }
            },
            "required": [
                "name",
                "error_message"
            ]
        },
        "ContentLibraryItemUpdatesessionFileValidationResult": {
            "type": "object",
            "properties": {
                "has_errors": {
                    "description": "Whether the validation was succesful or not. In case of errors, the File.ValidationResult.missing-files and File.ValidationResult.invalid-files will contain at least one entry.",
                    "type": "boolean"
                },
                "missing_files": {
                    "description": "A set containing the names of the files that are required but the client hasn't added.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "invalid_files": {
                    "description": "A list containing the files that have been identified as invalid and details about the error.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLibraryItemUpdatesessionFileValidationError"
                    }
                }
            },
            "required": [
                "has_errors",
                "missing_files",
                "invalid_files"
            ]
        },
        "ContentLibraryItemUpdatesessionPreviewInfo": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "Indicates the state of the preview of the update session.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionPreviewInfoState"
                },
                "certificate_info": {
                    "description": "The certificate information of the signed update session content.\nThis field is unset if the update session content is not signed.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionCertificateInfo"
                },
                "warnings": {
                    "description": "The list of warnings raised for this update session. Any warning which is not ignored by the client will, by default, fail the update session during session complete operation.\nThis field is optional and it is only relevant when the value of PreviewInfo.state is AVAILABLE.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLibraryItemUpdatesessionPreviewWarningInfo"
                    }
                },
                "cert_chain": {
                    "description": "Certificate chain in base64 format.\nThis field is unset if the update session content is not signed.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "state"
            ]
        },
        "ContentLibraryItemUpdatesessionPreviewInfoState": {
            "type": "string",
            "description": "The PreviewInfo.State enumerated type defines the state of the update session's preview.",
            "enum": [
                "UNAVAILABLE",
                "NOT_APPLICABLE",
                "PREPARING",
                "AVAILABLE"
            ]
        },
        "ContentLibraryItemUpdatesessionPreviewWarningInfo": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The warning type raised during preview of the update session.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionWarningType"
                },
                "message": {
                    "description": "The message specifying more details about the warning.",
                    "$ref": "#/definitions/VapiStdLocalizableMessage"
                },
                "ignored": {
                    "description": "Indicates if this warning will be ignored during session complete operation.",
                    "type": "boolean"
                }
            },
            "required": [
                "type",
                "message",
                "ignored"
            ]
        },
        "ContentLibraryItemUpdatesessionWarningBehavior": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The warning type which may be raised during the update session.",
                    "$ref": "#/definitions/ContentLibraryItemUpdatesessionWarningType"
                },
                "ignored": {
                    "description": "Indicates if this warning will be ignored during session complete operation.",
                    "type": "boolean"
                }
            },
            "required": [
                "type",
                "ignored"
            ]
        },
        "ContentLibraryItemUpdatesessionWarningType": {
            "type": "string",
            "description": "The WarningType enumerated type defines the warnings which can be raised during the update session.",
            "enum": [
                "SELF_SIGNED_CERTIFICATE",
                "EXPIRED_CERTIFICATE",
                "NOT_YET_VALID_CERTIFICATE",
                "UNTRUSTED_CERTIFICATE"
            ]
        },
        "ContentLibraryModel": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "An identifier which uniquely identifies this LibraryModel.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "creation_time": {
                    "description": "The date and time when this library was created.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "A human-readable description for this library.\nThis field is optional for the create operation. Leaving it unset during creation will result in an empty string value. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that the description should be left unchanged.",
                    "type": "string"
                },
                "last_modified_time": {
                    "description": "The date and time when this library was last updated. \n This field is updated automatically when the library properties are changed. This field is not affected by adding, removing, or modifying a library item or its content within the library. Tagging the library or syncing the subscribed library does not alter this field.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "last_sync_time": {
                    "description": "The date and time when this library was last synchronized. \n This field applies only to subscribed libraries. It is updated every time a synchronization is triggered on the library. The value is unset for a local library.\n\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "The name of the library. \n A Library is identified by a human-readable name. Library names cannot be undefined or an empty string. Names do not have to be unique.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "storage_backings": {
                    "description": "The list of default storage backings which are available for this library. \n A StorageBacking defines a default storage location which can be used to store files for library items in this library. Some library items, for instance, virtual machine template items, support files that may be distributed across various storage backings. One or more item files may or may not be located on the default storage backing. \n\n Multiple default storage locations are not currently supported but may become supported in future releases.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLibraryStorageBacking"
                    }
                },
                "type": {
                    "description": "The type (LibraryModel.LibraryType) of this library. \n This value can be used to determine what additional services and information can be available for this library. This field is not used for the create and update operations. It will always be present in the result of a get operation.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/ContentLibraryModelLibraryType"
                },
                "optimization_info": {
                    "description": "Defines various optimizations and optimization parameters applied to this library.\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "$ref": "#/definitions/ContentLibraryOptimizationInfo"
                },
                "version": {
                    "description": "A version number which is updated on metadata changes. This value allows clients to detect concurrent updates and prevent accidental clobbering of data. \n This value represents a number which is incremented every time library properties, such as name or description, are changed. It is not incremented by changes to a library item within the library, including adding or removing items. It is also not affected by tagging the library.\n\nThis field is not used for the create operation. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that you do not need to detect concurrent updates.",
                    "type": "string"
                },
                "publish_info": {
                    "description": "Defines how this library is published so that it can be subscribed to by a remote subscribed library. \n The PublishInfo defines where and how the metadata for this local library is accessible. A local library is only published publically if PublishInfo.published is true.\n\nThis field is optional for the create and update operations. If not specified during creation, the default is for the library to not be published. If not specified during update, the field is left unchanged.",
                    "$ref": "#/definitions/ContentLibraryPublishInfo"
                },
                "subscription_info": {
                    "description": "Defines the subscription behavior for this Library. \n The SubscriptionInfo defines how this subscribed library synchronizes to a remote source. Setting the value will determine the remote source to which the library synchronizes, and how. Changing the subscription will result in synchronizing to a new source. If the new source differs from the old one, the old library items and data will be lost. Setting SubscriptionInfo.automatic-sync-enabled to false will halt subscription but will not remove existing cached data.\n\nThis field is optional for the create and update operations. If not specified during creation, a default will be created without an active subscription. If not specified during update, the field is left unchanged.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionInfo"
                },
                "server_guid": {
                    "description": "The unique identifier of the vCenter server where the library exists.\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.",
                    "type": "string"
                },
                "security_policy_id": {
                    "description": "Represents the security policy applied to this library. \n Setting the field will make the library secure. This field is ignored in update operation if LibraryModel.unset-security-policy-id is set to true.\n\nThis field is optional for the create and update operations. If not set in create operation, the library will be insecure. If not specified in update operation, the field is left unchanged.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "unset_security_policy_id": {
                    "description": "This represents the intent of the change to LibraryModel.security-policy-id in update operation. \n If this field is set to true, any security policy applied to the library will be removed. If this field is set to false, any security policy applied to library will be changed to the value specified in LibraryModel.security-policy-id, if any.\n\nThis field is optional for the update operation. If unset, any existing security policy will be changed to the value specified in LibraryModel.security-policy-id, if any.",
                    "type": "boolean"
                }
            }
        },
        "ContentLibraryModelLibraryType": {
            "type": "string",
            "description": "The LibraryModel.LibraryType enumerated type defines the type of a LibraryModel. \n The type of a library can be used to determine which additional services can be performed with a library.",
            "enum": [
                "LOCAL",
                "SUBSCRIBED"
            ]
        },
        "ContentLibraryOptimizationInfo": {
            "type": "object",
            "properties": {
                "optimize_remote_publishing": {
                    "description": "If set to true then library would be optimized for remote publishing. \n Turn it on if remote publishing is dominant use case for this library. Remote publishing means here that publisher and subscribers are not the part of the same Vcenter SSO domain. \n\n Any optimizations could be done as result of turning on this optimization during library creation. For example, library content could be stored in different format but optimizations are not limited to just storage format. \n\n Note, that value of this toggle could be set only during creation of the library and you would need to migrate your library in case you need to change this value (optimize the library for different use case).\n\nThis field is optional for the create operation. If not specified for the create, the default is for the library to not be optmized for specific use case. It is not used for the update operation.",
                    "type": "boolean"
                }
            }
        },
        "ContentLibraryPublishInfo": {
            "type": "object",
            "properties": {
                "authentication_method": {
                    "description": "Indicates how a subscribed library should authenticate (AuthenticationMethod) to the published library endpoint.\nThis field is required for the LocalLibrary.create operation. It is optional for the LocalLibrary.update operation, and if unset the value will not be changed. When the existing authentication method is BASIC and authentication is being turned off by updating this field to NONE, then the PublishInfo.current-password field is required. This field will always be present in the results of the LocalLibrary.get operation.",
                    "$ref": "#/definitions/ContentLibraryPublishInfoAuthenticationMethod"
                },
                "published": {
                    "description": "Whether the local library is published.\nThis field is required for the LocalLibrary.create operation. It is optional for the LocalLibrary.update operation, and if unset the value will not be changed. When the existing authentication method is BASIC and the local library is published, the PublishInfo.current-password field is required before turning off publishing. This field will always be present in the results of the LocalLibrary.get operation.",
                    "type": "boolean"
                },
                "publish_url": {
                    "description": "The URL to which the library metadata is published by the Content Library Service. \n This value can be used to set the SubscriptionInfo.subscription-url property when creating a subscribed library.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "uri"
                },
                "user_name": {
                    "description": "The username to require for authentication.\nThis field is optional for the LocalLibrary.create and LocalLibrary.update operations. When the authentication method is NONE, the username can be left unset. When the authentication method is BASIC, the username is ignored in the current release. It defaults to \"vcsp\". It is preferable to leave this unset. If specified, it must be set to \"vcsp\".",
                    "type": "string"
                },
                "password": {
                    "description": "The new password to require for authentication.\nThis field is optional for the LocalLibrary.create operation. When the authentication method is NONE, the password can be left unset. When the authentication method is BASIC, the password should be a non-empty string. This field is optional for the LocalLibrary.update operation. Leaving it unset during update indicates that the password is not changed. When the password is changed, the PublishInfo.current-password field is required. This field is not used for the LocalLibrary.get operation.",
                    "type": "string",
                    "format": "password"
                },
                "current_password": {
                    "description": "The current password to verify. This field is available starting in vSphere 6.7.\nThis field is unused for the LocalLibrary.create operation. This field is optional for the LocalLibrary.update operation. When the existing authentication method is NONE, the current password can be left unset. When the existing authentication method is BASIC, the current password is verified before applying the new PublishInfo.password, turning off authentication, or unpublishing the library. This field is not used for the LocalLibrary.get operation.",
                    "type": "string",
                    "format": "password"
                },
                "persist_json_enabled": {
                    "description": "Whether library and library item metadata are persisted in the storage backing as JSON files. This flag only applies if the local library is published. \n Enabling JSON persistence allows you to synchronize a subscribed library manually instead of over HTTP. You copy the local library content and metadata to another storage backing manually and then create a subscribed library referencing the location of the library JSON file in the SubscriptionInfo.subscription-url. When the subscribed library's storage backing matches the subscription URL, files do not need to be copied to the subscribed library. \n\n For a library backed by a datastore, the library JSON file will be stored at the path contentlib-{library_id}/lib.json on the datastore. \n\n For a library backed by a remote file system, the library JSON file will be stored at {library_id}/lib.json in the remote file system path.\n\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                }
            }
        },
        "ContentLibraryPublishInfoAuthenticationMethod": {
            "type": "string",
            "description": "The PublishInfo.AuthenticationMethod enumerated type indicates how a subscribed library should authenticate to the published library endpoint.",
            "enum": [
                "BASIC",
                "NONE"
            ]
        },
        "ContentLibrarySourceInfo": {
            "type": "object",
            "properties": {
                "source_library": {
                    "description": "Identifier of the published library.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "subscription": {
                    "description": "Identifier of the subscription associated with the subscribed library.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                }
            }
        },
        "ContentLibraryStorageBacking": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type (Type) of StorageBacking.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/ContentLibraryStorageBackingType"
                },
                "datastore_id": {
                    "description": "Identifier of the datastore used to store the content in the library.\nThis field is optional and it is only relevant when the value of StorageBacking.type is DATASTORE.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore.",
                    "type": "string"
                },
                "storage_uri": {
                    "description": "URI identifying the location used to store the content in the library. \n The following URI formats are supported: \n\n vSphere 6.5 \n\n   - nfs://server/path?version=4 (for vCenter Server Appliance only) - Specifies an NFS Version 4 server.\n   - nfs://server/path (for vCenter Server Appliance only) - Specifies an NFS Version 3 server. The nfs://server:/path format is also supported.\n   - smb://server/path - Specifies an SMB server or Windows share.\n  \n vSphere 6.0 Update 1 \n\n   - nfs://server:/path (for vCenter Server Appliance only)\n   - file://unc-server/path (for vCenter Server for Windows only)\n   - file:///mount/point (for vCenter Server Appliance only) - Local file URIs are supported only when the path is a local mount point for an NFS file system. Use of file URIs is strongly discouraged. Instead, use an NFS URI to specify the remote file system.\n  \n vSphere 6.0 \n\n   - nfs://server:/path (for vCenter Server Appliance only)\n   - file://unc-server/path (for vCenter Server for Windows only)\n   - file:///path - Local file URIs are supported but strongly discouraged because it may interfere with the performance of vCenter Server.\n \nThis field is optional and it is only relevant when the value of StorageBacking.type is OTHER.",
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "ContentLibraryStorageBackingType": {
            "type": "string",
            "description": "The StorageBacking.Type enumerated type specifies the type of the StorageBacking.",
            "enum": [
                "DATASTORE",
                "OTHER"
            ]
        },
        "ContentLibrarySubscribedItemSync": {
            "type": "object",
            "properties": {
                "force_sync_content": {
                    "type": "boolean",
                    "description": "Whether to synchronize file content as well as metadata. This parameter applies only if the subscription is on-demand."
                },
                "sync_optional_files": {
                    "type": "boolean",
                    "description": "Whether to synchronize optional files. This parameter applies to both types of subscriptions on-demand as well as sync-immediately.\nThis parameter is optional because it was added in a newer version than its parent node."
                }
            },
            "required": [
                "force_sync_content"
            ]
        },
        "ContentLibrarySubscriptionInfo": {
            "type": "object",
            "properties": {
                "authentication_method": {
                    "description": "Indicate how the subscribed library should authenticate (AuthenticationMethod) with the published library endpoint.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionInfoAuthenticationMethod"
                },
                "automatic_sync_enabled": {
                    "description": "Whether the library should participate in automatic library synchronization. In order for automatic synchronization to happen, the global ConfigurationModel.automatic-sync-enabled option must also be true. The subscription is still active even when automatic synchronization is turned off, but synchronization is only activated with an explicit call to SubscribedLibrary.sync or SubscribedItem.sync. In other words, manual synchronization is still available even when automatic synchronization is disabled.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                },
                "on_demand": {
                    "description": "Indicates whether a library item's content will be synchronized only on demand. \n If this is set to true, then the library item's metadata will be synchronized but the item's content (its files) will not be synchronized. The Content Library Service will synchronize the content upon request only. This can cause the first use of the content to have a noticeable delay. \n\n Items without synchronized content can be forcefully synchronized in advance using the SubscribedItem.sync call with forceSyncContent set to true. Once content has been synchronized, the content can removed with the SubscribedItem.evict call. \n\n If this value is set to false, all content will be synchronized in advance.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                },
                "password": {
                    "description": "The password to use when authenticating. \n The password must be set when using a password-based authentication method; empty strings are not allowed.\n\nThis field is optional for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string",
                    "format": "password"
                },
                "ssl_thumbprint": {
                    "description": "An optional SHA-1 hash of the SSL certificate for the remote endpoint. \n If this value is defined the SSL certificate will be verified by comparing it to the SSL thumbprint. The SSL certificate must verify against the thumbprint. When specified, the standard certificate chain validation behavior is not used. The certificate chain is validated normally if this value is unset. The specified sslThumbprint will not be checked for SSL certificate validation if {SubscriptionInfo#sslCertificate} is also set.\n\nThis field is optional for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "subscription_url": {
                    "description": "The URL of the endpoint where the metadata for the remotely published library is being served. \n This URL can be the PublishInfo.publish-url of the published library (for example, https://server/path/lib.json). \n\n If the source content comes from a published library with PublishInfo.persist-json-enabled, the subscription URL can be a URL pointing to the library JSON file on a datastore or remote file system. The supported formats are: \n\n vSphere 6.5 \n\n   - ds:///vmfs/volumes/{uuid}/mylibrary/lib.json (for datastore)\n   - nfs://server/path/mylibrary/lib.json (for NFSv3 server on vCenter Server Appliance)\n   - nfs://server/path/mylibrary/lib.json?version=4 (for NFSv4 server on vCenter Server Appliance) \n   - smb://server/path/mylibrary/lib.json (for SMB server)\n  \n vSphere 6.0 \n\n   - file://server/mylibrary/lib.json (for UNC server on vCenter Server for Windows)\n   - file:///path/mylibrary/lib.json (for local file system)\n  \n When you specify a DS subscription URL, the datastore must be on the same vCenter Server as the subscribed library. When you specify an NFS or SMB subscription URL, the StorageBacking.storage-uri of the subscribed library must be on the same remote file server and should share a common parent path with the subscription URL.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string",
                    "format": "uri"
                },
                "user_name": {
                    "description": "The username to use when authenticating. \n The username must be set when using a password-based authentication method. Empty strings are allowed for usernames.\n\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "source_info": {
                    "description": "Information about the source published library. This field will be set for a subscribed library which is associated with a subscription of the published library.\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "$ref": "#/definitions/ContentLibrarySourceInfo"
                }
            }
        },
        "ContentLibrarySubscriptionInfoAuthenticationMethod": {
            "type": "string",
            "description": "Indicate how the subscribed library should authenticate with the published library endpoint.",
            "enum": [
                "BASIC",
                "NONE"
            ]
        },
        "ContentLibrarySubscriptionsCreate": {
            "$ref": "#/definitions/ContentLibrarySubscriptionsCreateSpec",
            "description": "Specification for the subscription."
        },
        "ContentLibrarySubscriptionsCreateSpec": {
            "type": "object",
            "properties": {
                "subscribed_library": {
                    "description": "Specification for the subscribed library to be associated with the subscription.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsCreateSpecSubscribedLibrary"
                }
            },
            "required": [
                "subscribed_library"
            ]
        },
        "ContentLibrarySubscriptionsCreateSpecNewSubscribedLibrary": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the subscribed library.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the subscribed library.\nIf unset, the description will be an empty string.",
                    "type": "string"
                },
                "storage_backings": {
                    "description": "The list of default storage backings for this library. \n The list must contain exactly one storage backing. Multiple default storage locations are not currently supported but may become supported in future releases.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLibraryStorageBacking"
                    }
                },
                "automatic_sync_enabled": {
                    "description": "Specifies whether the library should participate in automatic library synchronization.",
                    "type": "boolean"
                },
                "on_demand": {
                    "description": "Specifies whether a library item's content will be synchronized only on demand.",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "storage_backings",
                "automatic_sync_enabled",
                "on_demand"
            ]
        },
        "ContentLibrarySubscriptionsCreateSpecPlacement": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable folder for the virtual machine template; if a folder cannot be chosen, publishing a virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed. If Subscriptions.CreateSpecPlacement.cluster and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.cluster. If Subscriptions.CreateSpecPlacement.cluster and Subscriptions.CreateSpecPlacement.host are both specified, Subscriptions.CreateSpecPlacement.host must be a member of Subscriptions.CreateSpecPlacement.cluster.\nIf Subscriptions.CreateSpecPlacement.resource-pool or Subscriptions.CreateSpecPlacement.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed. If Subscriptions.CreateSpecPlacement.host and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.host. If Subscriptions.CreateSpecPlacement.cluster and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.cluster.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable resource pool for the virtual machine template; if a resource pool cannot be chosen, publish of virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If Subscriptions.CreateSpecPlacement.host and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.host. If Subscriptions.CreateSpecPlacement.host and Subscriptions.CreateSpecPlacement.cluster are both specified, Subscriptions.CreateSpecPlacement.host must be a member of Subscriptions.CreateSpecPlacement.cluster.\nIf this is unset, the system will attempt to choose a suitable host for the virtual machine template; if a host cannot be chosen, publishing the virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "network": {
                    "description": "Network that backs the virtual Ethernet adapters in the virtual machine template.\nIf unset, the virtual Ethernet adapters will not be backed by a network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                }
            }
        },
        "ContentLibrarySubscriptionsCreateSpecSubscribedLibrary": {
            "type": "object",
            "properties": {
                "target": {
                    "description": "Specifies whether the target subscribed library should be newly created or an existing subscribed library should be used.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsCreateSpecSubscribedLibraryTarget"
                },
                "new_subscribed_library": {
                    "description": "Specification for creating a new subscribed library associated with the subscription.\nThis field is optional and it is only relevant when the value of Subscriptions.CreateSpecSubscribedLibrary.target is CREATE_NEW.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsCreateSpecNewSubscribedLibrary"
                },
                "subscribed_library": {
                    "description": "Identifier of the existing subscribed library to associate with the subscription. Only the subscribed libraries for which SubscriptionInfo.subscription-url property is set to the PublishInfo.publish-url of the published library can be associated with the subscription.\nThis field is optional and it is only relevant when the value of Subscriptions.CreateSpecSubscribedLibrary.target is USE_EXISTING.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "location": {
                    "description": "Location of the subscribed library relative to the published library.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsLocation"
                },
                "vcenter": {
                    "description": "Specification for the subscribed library's vCenter Server instance.\nThis field is optional and it is only relevant when the value of Subscriptions.CreateSpecSubscribedLibrary.location is REMOTE.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsCreateSpecVcenter"
                },
                "placement": {
                    "description": "Placement specification for the virtual machine template library items on the subscribed library.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable placement specification for the virtual machine template items; if a placement specification cannot be chosen, publish of virtual machine template items will fail.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsCreateSpecPlacement"
                }
            },
            "required": [
                "target",
                "location"
            ]
        },
        "ContentLibrarySubscriptionsCreateSpecSubscribedLibraryTarget": {
            "type": "string",
            "description": "The Subscriptions.CreateSpecSubscribedLibrary.Target enumerated type defines the options related to the target subscribed library which will be associated with the subscription.",
            "enum": [
                "CREATE_NEW",
                "USE_EXISTING"
            ]
        },
        "ContentLibrarySubscriptionsCreateSpecVcenter": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "The hostname of the subscribed library's vCenter Server.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the vCenter Server instance where the subscribed library exists.\nIf unset, port 443 will be used.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "hostname"
            ]
        },
        "ContentLibrarySubscriptionsInfo": {
            "type": "object",
            "properties": {
                "subscribed_library": {
                    "description": "Identifier of the subscribed library associated with the subscription.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "subscribed_library_name": {
                    "description": "Name of the subscribed library associated with the subscription.",
                    "type": "string"
                },
                "subscribed_library_location": {
                    "description": "Location of the subscribed library relative to the published library.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsLocation"
                },
                "subscribed_library_vcenter": {
                    "description": "Information about the vCenter Server instance where the subscribed library exists.\nThis field is optional and it is only relevant when the value of Subscriptions.Info.subscribed-library-location is REMOTE.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsVcenterInfo"
                },
                "subscribed_library_placement": {
                    "description": "Placement information about the subscribed library's virtual machine template items.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsPlacementInfo"
                }
            },
            "required": [
                "subscribed_library",
                "subscribed_library_name",
                "subscribed_library_location",
                "subscribed_library_placement"
            ]
        },
        "ContentLibrarySubscriptionsLocation": {
            "type": "string",
            "description": "The Subscriptions.Location enumerated type defines the location of subscribed library relative to the published library.",
            "enum": [
                "LOCAL",
                "REMOTE"
            ]
        },
        "ContentLibrarySubscriptionsPlacementInfo": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.\nThe field will be unset if the subscribed library associated with the subscription does not have a virtual machine folder.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed.\nThe field will be unset if the subscribed library associated with the subscription does not have a cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed.\nThe field will be unset if the subscribed library associated with the subscription does not have a resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If Subscriptions.PlacementInfo.host and Subscriptions.PlacementInfo.resource-pool are both specified, Subscriptions.PlacementInfo.resource-pool must belong to Subscriptions.PlacementInfo.host. If Subscriptions.PlacementInfo.host and Subscriptions.PlacementInfo.cluster are both specified, Subscriptions.PlacementInfo.host must be a member of Subscriptions.PlacementInfo.cluster.\nThe field will be unset if the subscribed library associated with the subscription does not have a host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "network": {
                    "description": "Network that backs the virtual Ethernet adapters in the virtual machine template.\nThe field will be unset if the subscribed library associated with the subscription does not have a network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                }
            }
        },
        "ContentLibrarySubscriptionsSummary": {
            "type": "object",
            "properties": {
                "subscription": {
                    "description": "Identifier of the subscription.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                },
                "subscribed_library": {
                    "description": "Identifier of the subscribed library.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "subscribed_library_name": {
                    "description": "Name of the subscribed library.",
                    "type": "string"
                },
                "subscribed_library_vcenter_hostname": {
                    "description": "Hostname of the vCenter instance where the subscribed library exists.\nThis field is unset if the subscribed library is on the same vCenter Server instance as the published library.",
                    "type": "string"
                }
            },
            "required": [
                "subscription",
                "subscribed_library",
                "subscribed_library_name"
            ]
        },
        "ContentLibrarySubscriptionsUpdate": {
            "$ref": "#/definitions/ContentLibrarySubscriptionsUpdateSpec",
            "description": "Specification of the new property values to set on the subscription."
        },
        "ContentLibrarySubscriptionsUpdateSpec": {
            "type": "object",
            "properties": {
                "subscribed_library_vcenter": {
                    "description": "Specification for the subscribed library's vCenter Server instance.\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsUpdateSpecVcenter"
                },
                "subscribed_library_placement": {
                    "description": "Placement specification for the virtual machine template items of the subscribed library. Updating this information will only affect new or updated items, existing items will not be moved. The entire placement configuration of the subscribed library will replaced by the new specification.\nIf unset, the placement configuration of the subscribed library will be unchanged.",
                    "$ref": "#/definitions/ContentLibrarySubscriptionsUpdateSpecPlacement"
                }
            }
        },
        "ContentLibrarySubscriptionsUpdateSpecPlacement": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable folder for the virtual machine template; if a folder cannot be chosen, publishing a virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed. If Subscriptions.UpdateSpecPlacement.cluster and Subscriptions.UpdateSpecPlacement.resource-pool are both specified, Subscriptions.UpdateSpecPlacement.resource-pool must belong to Subscriptions.UpdateSpecPlacement.cluster. If Subscriptions.UpdateSpecPlacement.cluster and Subscriptions.UpdateSpecPlacement.host are both specified, Subscriptions.UpdateSpecPlacement.host must be a member of Subscriptions.UpdateSpecPlacement.cluster. If Subscriptions.UpdateSpecPlacement.resource-pool or Subscriptions.UpdateSpecPlacement.host is specified, it is recommended that this field be unset.\nIf Subscriptions.UpdateSpecPlacement.resource-pool or Subscriptions.UpdateSpecPlacement.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable resource pool for the virtual machine template; if a resource pool cannot be chosen, publish of virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If Subscriptions.UpdateSpecPlacement.host and Subscriptions.UpdateSpecPlacement.resource-pool are both specified, Subscriptions.UpdateSpecPlacement.resource-pool must belong to Subscriptions.UpdateSpecPlacement.host. If Subscriptions.UpdateSpecPlacement.host and Subscriptions.UpdateSpecPlacement.cluster are both specified, Subscriptions.UpdateSpecPlacement.host must be a member of Subscriptions.UpdateSpecPlacement.cluster.\nIf this is unset, the system will attempt to choose a suitable host for the virtual machine template; if a host cannot be chosen, publishing the virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "network": {
                    "description": "Network that backs the virtual Ethernet adapters in the virtual machine template.\nIf unset, newly published virtual machine template library items will not be backed by a network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                }
            }
        },
        "ContentLibrarySubscriptionsUpdateSpecVcenter": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "The hostname of the subscribed library's vCenter Server.\nIf unset, the value is unchanged.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the vCenter Server instance where the subscribed library exists.\nIf unset, the value is unchanged.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ContentLibrarySubscriptionsVcenterInfo": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "Hostname of the vCenter Server instance where the subscribed library exists.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the vCenter Server instance where the subscribed library exists.\nIf unset, port 443 will be used.",
                    "type": "integer",
                    "format": "int64"
                },
                "server_guid": {
                    "description": "The unique identifier of the vCenter Server where the subscribed library exists.",
                    "type": "string"
                }
            },
            "required": [
                "hostname",
                "server_guid"
            ]
        },
        "ContentLibraryUpdate": {
            "$ref": "#/definitions/ContentLibraryModel",
            "description": "Specification of the new property values to set on the library."
        },
        "ContentLocalLibraryCreate": {
            "$ref": "#/definitions/ContentLibraryModel",
            "description": "Specification for the new local library."
        },
        "ContentLocalLibraryDestinationSpec": {
            "type": "object",
            "properties": {
                "subscription": {
                    "description": "Identifier of the subscription associated with the subscribed library.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                }
            },
            "required": [
                "subscription"
            ]
        },
        "ContentLocalLibraryPublish": {
            "type": "object",
            "properties": {
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentLocalLibraryDestinationSpec"
                    },
                    "description": "The list of subscriptions to publish this library to."
                }
            }
        },
        "ContentLocalLibraryUpdate": {
            "$ref": "#/definitions/ContentLibraryModel",
            "description": "Specification of the new property values to set on the local library."
        },
        "ContentSecurityPoliciesInfo": {
            "type": "object",
            "properties": {
                "policy": {
                    "description": "Identifier of the security policy\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.SecurityPolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.SecurityPolicy.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the security policy",
                    "type": "string"
                },
                "item_type_rules": {
                    "description": "Map of content library item type and rule types The rules can be associated with a security policy. When the security policy is applied to a content library, these rules will be used to validate specific item type.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ContentSecurityRuleType"
                    }
                }
            },
            "required": [
                "policy",
                "name",
                "item_type_rules"
            ]
        },
        "ContentSecurityRuleType": {
            "type": "string",
            "description": "The SecurityRuleType enumerated type defines the security rules which can be applied to different item types.",
            "enum": [
                "OVF_STRICT_VERIFICATION"
            ]
        },
        "ContentSubscribedLibraryCreate": {
            "$ref": "#/definitions/ContentLibraryModel",
            "description": "Specification for the new subscribed library."
        },
        "ContentSubscribedLibraryProbe": {
            "type": "object",
            "properties": {
                "subscription_info": {
                    "$ref": "#/definitions/ContentLibrarySubscriptionInfo",
                    "description": "The subscription info to be probed."
                }
            },
            "required": [
                "subscription_info"
            ]
        },
        "ContentSubscribedLibraryProbeResult": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The status of probe result. This will be one of Status.",
                    "$ref": "#/definitions/ContentSubscribedLibraryProbeResultStatus"
                },
                "ssl_thumbprint": {
                    "description": "The SSL thumbprint for the remote endpoint.\nA SSL thumbprint is only returned if the host is secured with SSL/TLS.",
                    "type": "string"
                },
                "error_messages": {
                    "description": "If the probe result is in an error status, this field will contain the detailed error messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                }
            },
            "required": [
                "status",
                "error_messages"
            ]
        },
        "ContentSubscribedLibraryProbeResultStatus": {
            "type": "string",
            "description": "The SubscribedLibrary.ProbeResult.Status enumerated type defines the error status constants for the probe result.",
            "enum": [
                "SUCCESS",
                "INVALID_URL",
                "TIMED_OUT",
                "HOST_NOT_FOUND",
                "RESOURCE_NOT_FOUND",
                "INVALID_CREDENTIALS",
                "CERTIFICATE_ERROR",
                "UNKNOWN_ERROR"
            ]
        },
        "ContentSubscribedLibraryUpdate": {
            "$ref": "#/definitions/ContentLibraryModel",
            "description": "Specification of the new property values to set on the subscribed library."
        },
        "ContentTrustedCertificatesCreate": {
            "$ref": "#/definitions/ContentTrustedCertificatesCreateSpec",
            "description": "Specification for the certificate to be added to content library trust store."
        },
        "ContentTrustedCertificatesCreateSpec": {
            "type": "object",
            "properties": {
                "cert_text": {
                    "description": "A certText is the certificate in Base64 encoded PEM format. The input must be a single line string with escape sequence for new-lines.",
                    "type": "string"
                }
            },
            "required": [
                "cert_text"
            ]
        },
        "ContentTrustedCertificatesInfo": {
            "type": "object",
            "properties": {
                "cert_text": {
                    "description": "A certificate in Base64 encoding",
                    "type": "string"
                }
            },
            "required": [
                "cert_text"
            ]
        },
        "ContentTrustedCertificatesListResult": {
            "type": "object",
            "properties": {
                "certificates": {
                    "description": "List of certificates.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentTrustedCertificatesSummary"
                    }
                }
            },
            "required": [
                "certificates"
            ]
        },
        "ContentTrustedCertificatesSummary": {
            "type": "object",
            "properties": {
                "certificate": {
                    "description": "Unique identifier for the certificate. It is the TrustStore alias of the certificate. The alias is the SHA256 hash of the raw certificate data.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.TrustedCertificate. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.TrustedCertificate.",
                    "type": "string"
                },
                "cert_text": {
                    "description": "Certificate in Base64 encoded PEM format..",
                    "type": "string"
                }
            },
            "required": [
                "certificate",
                "cert_text"
            ]
        },
        "ContentTypeInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "A description of the type support offered by the plugin.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the plugin which provides the type support.",
                    "type": "string"
                },
                "type": {
                    "description": "The type which the plugin supports. \n To upload a library item of the type supported by the plugin, the ItemModel.type field of the item should be set to this value.",
                    "type": "string"
                },
                "vendor": {
                    "description": "The name of the vendor who created the type support plugin.",
                    "type": "string"
                },
                "version": {
                    "description": "The version number of the type support plugin.",
                    "type": "string"
                },
                "supported_rules": {
                    "description": "List of security rules which can be applied to this item type.\nIf unset no security rule can be associated with this item type.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentSecurityRuleType"
                    }
                }
            },
            "required": [
                "description",
                "name",
                "type",
                "vendor",
                "version"
            ]
        },
        "VapiStdErrorsAlreadyExists": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsConcurrentChange": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsError": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsErrorType": {
            "type": "string",
            "description": "Enumeration of all standard errors. Used as discriminator in protocols that have no standard means for transporting the error type, e.g. REST.",
            "enum": [
                "ERROR",
                "ALREADY_EXISTS",
                "ALREADY_IN_DESIRED_STATE",
                "CANCELED",
                "CONCURRENT_CHANGE",
                "FEATURE_IN_USE",
                "INTERNAL_SERVER_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_ELEMENT_CONFIGURATION",
                "INVALID_ELEMENT_TYPE",
                "INVALID_REQUEST",
                "NOT_ALLOWED_IN_CURRENT_STATE",
                "NOT_FOUND",
                "OPERATION_NOT_FOUND",
                "RESOURCE_BUSY",
                "RESOURCE_IN_USE",
                "RESOURCE_INACCESSIBLE",
                "SERVICE_UNAVAILABLE",
                "TIMED_OUT",
                "UNABLE_TO_ALLOCATE_RESOURCE",
                "UNAUTHENTICATED",
                "UNAUTHORIZED",
                "UNEXPECTED_INPUT",
                "UNSUPPORTED",
                "UNVERIFIED_PEER"
            ]
        },
        "VapiStdErrorsInvalidArgument": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsInvalidElementConfiguration": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsInvalidElementType": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsNotAllowedInCurrentState": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsNotFound": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsResourceBusy": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsResourceInaccessible": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsUnauthenticated": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "Indicates the authentication challenges applicable to the target API provider. It can be used by a client to discover the correct authentication scheme to use. The exact syntax of the value is defined by the specific provider, the protocol and authentication schemes used. \n For example, a provider using REST may adhere to the WWW-Authenticate HTTP header specification, RFC7235, section 4.1. In this case an example challenge value may be: SIGN realm=\"27da1358-2ba4-11e9-b210-d663bd873d93\",sts=\"http://vcenter/sso?vsphere.local\", Basic realm=\"vCenter\"\n\nThis field is optional because it was added in a newer version than its parent node.",
                    "type": "string"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsUnauthorized": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdErrorsUnsupported": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VapiStdLocalizableMessage"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/VapiStdErrorsErrorType"
                }
            },
            "required": [
                "messages"
            ]
        },
        "VapiStdLocalizableMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. \n This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the en_US (English) locale. If LocalizableMessage.id refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user. It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "args": {
                    "description": "Positional arguments to be substituted into the message template. This list will be empty if the message uses named arguments or has no arguments.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "params": {
                    "description": "Named arguments to be substituted into the message template.\nUnset means that the message template requires no arguments or positional arguments are used.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VapiStdLocalizationParam"
                    }
                },
                "localized": {
                    "description": "Localized string value as per request requirements.\nwhen the client has not requested specific locale the implementation may not populate this field to conserve resources.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "VapiStdLocalizationParam": {
            "type": "object",
            "properties": {
                "s": {
                    "description": "String value associated with the parameter.\nthis field will be set when string value is used.",
                    "type": "string"
                },
                "dt": {
                    "description": "Date and time value associated with the parameter. Use the LocalizationParam.format field to specify date and time display style.\nthis field will be set when date and time value is used.",
                    "type": "string",
                    "format": "date-time"
                },
                "i": {
                    "description": "long value associated with the parameter.\nthis field will be set when long value is used.",
                    "type": "integer",
                    "format": "int64"
                },
                "d": {
                    "description": "The double value associated with the parameter. The number of displayed fractional digits is changed via LocalizationParam.precision field.\nthis field will be set when double value is used.",
                    "type": "number",
                    "format": "double"
                },
                "l": {
                    "description": "Nested localizable value associated with the parameter. This is useful construct to convert to human readable localized form enumerated type and boolean values. It can also be used for proper handling of pluralization and gender forms in localization. Recursive NestedLocalizableMessage instances can be used for localizing short lists of items.\nthis field will be set when nested localization message value is used.",
                    "$ref": "#/definitions/VapiStdNestedLocalizableMessage"
                },
                "format": {
                    "description": "Format associated with the date and time value in LocalizationParam.dt field. The enumeration value SHORT_DATETIME will be used as default.\nthis may not be set if enumeration value SHORT_DATETIME default format is appropriate",
                    "$ref": "#/definitions/VapiStdLocalizationParamDateTimeFormat"
                },
                "precision": {
                    "description": "Number of fractional digits to include in formatted double value.\nthis will be set when exact precision is required for rendering double numbers.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "VapiStdLocalizationParamDateTimeFormat": {
            "type": "string",
            "description": "The LocalizationParam.DateTimeFormat enumerated type lists possible date and time formatting options. It combines the Unicode CLDR format types - full, long, medium and short with 3 different presentations - date only, time only and combined date and time presentation.",
            "enum": [
                "SHORT_DATE",
                "MED_DATE",
                "LONG_DATE",
                "FULL_DATE",
                "SHORT_TIME",
                "MED_TIME",
                "LONG_TIME",
                "FULL_TIME",
                "SHORT_DATE_TIME",
                "MED_DATE_TIME",
                "LONG_DATE_TIME",
                "FULL_DATE_TIME"
            ]
        },
        "VapiStdNestedLocalizableMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. \n This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "params": {
                    "description": "Named Arguments to be substituted into the message template.\nservices will not populate this field when there are no parameters to be substituted",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/VapiStdLocalizationParam"
                    }
                }
            },
            "required": [
                "id"
            ]
        },
        "content.configuration_model": {
            "type": "object",
            "properties": {
                "automatic_sync_enabled": {
                    "description": "Whether automatic synchronization is enabled. \n When automatic synchronization is enabled, the Content Library Service will automatically synchronize all subscribed libraries on a daily basis. Subscribed libraries with the SubscriptionInfo.automatic-sync-enabled flag turned on will be synchronized every hour between ConfigurationModel.automatic-sync-start-hour and ConfigurationModel.automatic-sync-stop-hour.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                },
                "automatic_sync_start_hour": {
                    "description": "The hour at which the automatic synchronization will start. This value is between 0 (midnight) and 23 inclusive.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "automatic_sync_stop_hour": {
                    "description": "The hour at which the automatic synchronization will stop. Any active synchronization operation will continue to run, however no new synchronization operations will be triggered after the stop hour. This value is between 0 (midnight) and 23 inclusive.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "maximum_concurrent_item_syncs": {
                    "description": "The maximum allowed number of library items to synchronize concurrently from remote libraries. This must be a positive number. The service may not be able to guarantee the requested concurrency if there is no available capacity. \n This setting is global across all subscribed libraries.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "content.configuration_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.configuration_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.configuration_update": {
            "type": "object",
            "properties": {
                "model": {
                    "$ref": "#/definitions/content.configuration_model",
                    "description": "The ConfigurationModel specifying the settings to update."
                }
            },
            "required": [
                "model"
            ]
        },
        "content.library.find_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.find_spec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the library to search. The name is case-insensitive. See LibraryModel.name.\nIf not specified any name will be searched.",
                    "type": "string"
                },
                "type": {
                    "description": "Library type to search. See LibraryModel.type.\nIf not specified any library type will be searched.",
                    "$ref": "#/definitions/content.library_model.library_type"
                }
            }
        },
        "content.library.item.cert_verification_status": {
            "type": "string",
            "description": "The CertVerificationStatus enumerated type defines the certificate verification status of a library item. Currently applicable only to ovf item type",
            "enum": [
                "NOT_AVAILABLE",
                "VERIFIED",
                "INTERNAL",
                "VERIFICATION_FAILURE",
                "VERIFICATION_IN_PROGRESS",
                "UNTRUSTED"
            ]
        },
        "content.library.item.certificate_verification_info": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The certificate verification status of item.",
                    "$ref": "#/definitions/content.library.item.cert_verification_status"
                },
                "cert_chain": {
                    "description": "A certificate in base64 encoding.\nCertificate chain is unset if the item not signed",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "status"
            ]
        },
        "content.library.item.changes.info": {
            "type": "object",
            "properties": {
                "time": {
                    "description": "The date and time when the item content was changed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "The user who made the content change.\nThis field will be unset if the user could not be determined.",
                    "type": "string"
                },
                "message": {
                    "description": "The full message describing the content change.\nThis field will be unset if a message was not provided when the item content was changed.",
                    "type": "string"
                }
            },
            "required": [
                "time"
            ]
        },
        "content.library.item.changes.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.changes.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.changes.summary": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "The version of the library item.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.Version. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.Version.",
                    "type": "string"
                },
                "time": {
                    "description": "The date and time when the item content was changed.",
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "description": "The user who made the content change.\nThis field will be unset if the user could not be determined.",
                    "type": "string"
                },
                "short_message": {
                    "description": "The short message describing the content change. The message is truncated to the first 80 characters or first non-leading newline character, whichever length is shorter.\nThis field will be unset if a message was not provided when the item content was changed.",
                    "type": "string"
                }
            },
            "required": [
                "version",
                "time"
            ]
        },
        "content.library.item.changes_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.changes.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.copy_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.destination_spec": {
            "type": "object",
            "properties": {
                "subscription": {
                    "description": "Identifier of the subscription associated with the subscribed library.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                }
            },
            "required": [
                "subscription"
            ]
        },
        "content.library.item.download_session.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.download_session.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.download_session_create": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "A unique token generated by the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                },
                "create_spec": {
                    "$ref": "#/definitions/content.library.item.download_session_model",
                    "description": "Specification for the new download session to be created."
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "content.library.item.download_session_fail": {
            "type": "object",
            "properties": {
                "client_error_message": {
                    "type": "string",
                    "description": "Client side error message. This can be useful in providing some extra details about the client side failure. Note that the message won't be translated to the user's locale."
                }
            },
            "required": [
                "client_error_message"
            ]
        },
        "content.library.item.download_session_keep_alive": {
            "type": "object",
            "properties": {
                "progress": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional update to the progress property of the session. If specified, the new progress should be greater then the current progress. See DownloadSessionModel.client-progress.\nIf not specified the progress is not updated."
                }
            }
        },
        "content.library.item.download_session_model": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier of this download session.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.DownloadSession. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.DownloadSession.",
                    "type": "string"
                },
                "library_item_id": {
                    "description": "The identifier of the library item whose content is being downloaded.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "library_item_content_version": {
                    "description": "The content version of the library item whose content is being downloaded. This value is the ItemModel.content-version at the time when the session is created for the library item.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string"
                },
                "error_message": {
                    "description": "If the session is in the ERROR status this property will have more details about the error.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "client_progress": {
                    "description": "The progress that has been made with the download. This property is to be updated by the client during the download process to indicate the progress of its work in completing the download. The initial progress is 0 until updated by the client. The maximum value is 100, which indicates that the download is complete.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "description": "The current state (State) of the download session.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/content.library.item.download_session_model.state"
                },
                "expiration_time": {
                    "description": "Indicates the time after which the session will expire. The session is guaranteed not to expire before this time.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "content.library.item.download_session_model.state": {
            "type": "string",
            "description": "The state of the download session.",
            "enum": [
                "ACTIVE",
                "CANCELED",
                "ERROR"
            ]
        },
        "content.library.item.download_session_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.download_session_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.downloadsession.file.endpoint_type": {
            "type": "string",
            "description": "The File.EndpointType enumerated type defines the types of endpoints used to download the file.",
            "enum": [
                "HTTPS",
                "DIRECT"
            ]
        },
        "content.library.item.downloadsession.file.info": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "size": {
                    "description": "The file size, in bytes.\nThis field may not be available immediately. It is guaranteed to be set when the client finishes downloading the file.",
                    "type": "integer",
                    "format": "int64"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by the server so far for making this file prepared for download. This value may stay at zero till the client starts downloading the file.",
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "description": "The preparation status (PrepareStatus) of the file.",
                    "$ref": "#/definitions/content.library.item.downloadsession.file.prepare_status"
                },
                "download_endpoint": {
                    "description": "Endpoint at which the file is available for download. The value is valid only when the File.Info.status is PREPARED.\nThis field won't be set until the file status is PREPARED.",
                    "$ref": "#/definitions/content.library.item.transfer_endpoint"
                },
                "checksum_info": {
                    "description": "The checksum information of the file. When the download is complete, you can retrieve the checksum from the File.get operation to verify the checksum for the downloaded file.\nThe checksum is always calculated for the downloaded file, but this field won't be set until the download is complete.",
                    "$ref": "#/definitions/content.library.item.file.checksum_info"
                },
                "error_message": {
                    "description": "Error message for a failed preparation when the prepare status is ERROR.\nThis field won't be set unless there was an error with the file transfer.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "name",
                "bytes_transferred",
                "status"
            ]
        },
        "content.library.item.downloadsession.file.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.downloadsession.file.info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.downloadsession.file.prepare_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.downloadsession.file.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.downloadsession.file.prepare_status": {
            "type": "string",
            "description": "The File.PrepareStatus enumerated type defines the state of the file in preparation for download.",
            "enum": [
                "UNPREPARED",
                "PREPARE_REQUESTED",
                "PREPARING",
                "PREPARED",
                "ERROR"
            ]
        },
        "content.library.item.downloadsession.file_get": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "Name of the file requested."
                }
            },
            "required": [
                "file_name"
            ]
        },
        "content.library.item.downloadsession.file_prepare": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "Name of the file requested for download."
                },
                "endpoint_type": {
                    "$ref": "#/definitions/content.library.item.downloadsession.file.endpoint_type",
                    "description": "Endpoint type request, one of EndpointType. This will determine the type of the File.Info.download-endpoint that is generated when the file is prepared. The DIRECT is only available to users who have the ContentLibrary.ReadStorage privilege.\nIf not specified the default is HTTPS."
                }
            },
            "required": [
                "file_name"
            ]
        },
        "content.library.item.downloadsession.file_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.downloadsession.file.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.file.checksum_algorithm": {
            "type": "string",
            "description": "The File.ChecksumAlgorithm enumerated type defines the valid checksum algorithms.",
            "enum": [
                "SHA1",
                "MD5",
                "SHA256",
                "SHA512"
            ]
        },
        "content.library.item.file.checksum_info": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "The checksum algorithm (ChecksumAlgorithm) used to calculate the checksum.\nIf not specified the default checksum algorithm is SHA1.",
                    "$ref": "#/definitions/content.library.item.file.checksum_algorithm"
                },
                "checksum": {
                    "description": "The checksum value calculated with File.ChecksumInfo.algorithm.",
                    "type": "string"
                }
            },
            "required": [
                "checksum"
            ]
        },
        "content.library.item.file.info": {
            "type": "object",
            "properties": {
                "checksum_info": {
                    "description": "A checksum for validating the content of the file. \n This value can be used to verify that a transfer was completed without errors.\n\nA checksum cannot always be calculated, and the value will be unset if the file does not have content.",
                    "$ref": "#/definitions/content.library.item.file.checksum_info"
                },
                "name": {
                    "description": "The name of the file. \n This value will be unique within the library item for each file. It cannot be an empty string.",
                    "type": "string"
                },
                "size": {
                    "description": "The file size, in bytes. The file size is the storage used and not the uploaded or provisioned size. For example, when uploading a disk to a datastore, the amount of storage that the disk consumes may be different from the disk file size. When the file is not cached, the size is 0.",
                    "type": "integer",
                    "format": "int64"
                },
                "cached": {
                    "description": "Indicates whether the file is on disk or not.",
                    "type": "boolean"
                },
                "version": {
                    "description": "The version of this file; incremented when a new copy of the file is uploaded.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "size",
                "cached",
                "version"
            ]
        },
        "content.library.item.file.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.file.info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.file_get": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the file in the library item whose information should be returned."
                }
            },
            "required": [
                "name"
            ]
        },
        "content.library.item.file_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.file.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.find_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.find_spec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the library item. The name is case-insensitive. See ItemModel.name.\nIf not specified all library item names are searched.",
                    "type": "string"
                },
                "library_id": {
                    "description": "The identifier of the library containing the item. See ItemModel.library-id.\nIf not specified all libraries are searched.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "source_id": {
                    "description": "The identifier of the library item as reported by the publisher. See ItemModel.source-id.\nIf not specified all library items are searched.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the library item. The type is case-insensitive. See ItemModel.type.\nIf not specified all types are searched.",
                    "type": "string"
                },
                "cached": {
                    "description": "Whether the item is cached. Possible values are 'true' or 'false'. See ItemModel.cached.\nIf not specified all library items are searched.",
                    "type": "boolean"
                }
            }
        },
        "content.library.item.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.storage.info": {
            "type": "object",
            "properties": {
                "storage_backing": {
                    "description": "The storage backing on which this object resides. This might not be the same as the default storage backing associated with the library.",
                    "$ref": "#/definitions/content.library.storage_backing"
                },
                "storage_uris": {
                    "description": "URIs that identify the file on the storage backing. \n These URIs may be specific to the backing and may need interpretation by the client. A client that understands a URI scheme in this list may use that URI to directly access the file on the storage backing. This can provide high-performance support for file manipulation.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "checksum_info": {
                    "description": "A checksum for validating the content of the file. \n This value can be used to verify that a transfer was completed without errors.\n\nA checksum cannot always be calculated, and the value will be unset if the file does not have content.",
                    "$ref": "#/definitions/content.library.item.file.checksum_info"
                },
                "name": {
                    "description": "The name of the file. \n This value will be unique within the library item for each file. It cannot be an empty string.",
                    "type": "string"
                },
                "size": {
                    "description": "The file size, in bytes. The file size is the storage used and not the uploaded or provisioned size. For example, when uploading a disk to a datastore, the amount of storage that the disk consumes may be different from the disk file size. When the file is not cached, the size is 0.",
                    "type": "integer",
                    "format": "int64"
                },
                "cached": {
                    "description": "Indicates whether the file is on disk or not.",
                    "type": "boolean"
                },
                "version": {
                    "description": "The version of this file; incremented when a new copy of the file is uploaded.",
                    "type": "string"
                }
            },
            "required": [
                "storage_backing",
                "storage_uris",
                "name",
                "size",
                "cached",
                "version"
            ]
        },
        "content.library.item.storage.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.storage.info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.storage_get": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "Name of the file for which the storage information should be listed."
                }
            },
            "required": [
                "file_name"
            ]
        },
        "content.library.item.storage_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.storage.info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.transfer_endpoint": {
            "type": "object",
            "properties": {
                "uri": {
                    "description": "Transfer endpoint URI. The supported URI schemes are: http, https, and ds. \n An endpoint URI with the ds scheme specifies the location of the file on the datastore. The format of the datastore URI is: \n\n   - ds:///vmfs/volumes/uuid/path\n  \n When the transfer endpoint is a datastore location, the server can import the file directly from the storage backing without the overhead of streaming over HTTP.",
                    "type": "string",
                    "format": "uri"
                },
                "ssl_certificate_thumbprint": {
                    "description": "Thumbprint of the expected SSL certificate for this endpoint. Only used for HTTPS connections. The thumbprint is the SHA-1 hash of the DER encoding of the remote endpoint's SSL certificate. If set, the remote endpoint's SSL certificate is only accepted if it matches this thumbprint, and no other certificate validation is performed. The specified sslCertificateThumbprint will not be checked for SSL certificate validation if {TransferEndpoint#sslCertificate} is also set.\nIf unset, standard certificate validation is performed.",
                    "type": "string"
                }
            },
            "required": [
                "uri"
            ]
        },
        "content.library.item.transfer_status": {
            "type": "string",
            "description": "The TransferStatus enumerated type defines the transfer state of a file.",
            "enum": [
                "WAITING_FOR_TRANSFER",
                "TRANSFERRING",
                "READY",
                "VALIDATING",
                "ERROR"
            ]
        },
        "content.library.item.update_session.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.update_session.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.update_session_create": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "Unique token generated by the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                },
                "create_spec": {
                    "$ref": "#/definitions/content.library.item.update_session_model",
                    "description": "Specification for the new update session to be created."
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "content.library.item.update_session_fail": {
            "type": "object",
            "properties": {
                "client_error_message": {
                    "type": "string",
                    "description": "Client side error message. This can be useful in providing some extra details about the client side failure. Note that the message won't be translated to the user's locale."
                }
            },
            "required": [
                "client_error_message"
            ]
        },
        "content.library.item.update_session_keep_alive": {
            "type": "object",
            "properties": {
                "client_progress": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional update to the progress property of the session. If specified, the new progress should be greater then the current progress. See UpdateSessionModel.client-progress.\nIf not specified the progress is not updated."
                }
            }
        },
        "content.library.item.update_session_model": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier of this update session.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.UpdateSession. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.UpdateSession.",
                    "type": "string"
                },
                "library_item_id": {
                    "description": "The identifier of the library item to which content will be uploaded or removed.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "library_item_content_version": {
                    "description": "The content version of the library item whose content is being modified. This value is the ItemModel.content-version at the time when the session is created for the library item.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string"
                },
                "error_message": {
                    "description": "If the session is in the ERROR status this property will have more details about the error.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "client_progress": {
                    "description": "The progress that has been made with the upload. This property is to be updated by the client during the upload process to indicate the progress of its work in completing the upload. The initial progress is 0 until updated by the client. The maximum value is 100, which indicates that the update is complete.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "description": "The current state (State) of the update session.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/content.library.item.update_session_model.state"
                },
                "expiration_time": {
                    "description": "Indicates the time after which the session will expire. The session is guaranteed not to expire earlier than this time.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "preview_info": {
                    "description": "A preview of the files currently being uploaded in the session. This property will be set only when the session is in the ACTIVE.\nThis field is optional and it is only relevant when the value of UpdateSessionModel.state is ACTIVE.",
                    "$ref": "#/definitions/content.library.item.updatesession.preview_info"
                },
                "warning_behavior": {
                    "description": "Indicates the update session behavior if warnings are raised in the session preview. Any warning which is raised by session preview but not ignored by the client will, by default, fail the update session.\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.updatesession.warning_behavior"
                    }
                }
            }
        },
        "content.library.item.update_session_model.state": {
            "type": "string",
            "description": "The state of an update session.",
            "enum": [
                "ACTIVE",
                "DONE",
                "ERROR",
                "CANCELED"
            ]
        },
        "content.library.item.update_session_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.update_session_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.update_session_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "$ref": "#/definitions/content.library.item.update_session_model",
                    "description": "Specification for the new property values to be set on the update session."
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "content.library.item.updatesession.certificate_info": {
            "type": "object",
            "properties": {
                "issuer": {
                    "description": "Certificate issuer. For example: /C=US/ST=California/L=Palo Alto/O=VMware, Inc.",
                    "type": "string"
                },
                "subject": {
                    "description": "Certificate subject. For example: C=US/ST=Massachusetts/L=Hopkinton/O=EMC Corporation/OU=EMC Avamar/CN=EMC Corporation.",
                    "type": "string"
                },
                "self_signed": {
                    "description": "Whether the certificate is self-signed.",
                    "type": "boolean"
                },
                "x509": {
                    "description": "The X509 representation of the certificate.",
                    "type": "string"
                }
            },
            "required": [
                "issuer",
                "subject",
                "self_signed",
                "x509"
            ]
        },
        "content.library.item.updatesession.file.add_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.updatesession.file.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.updatesession.file.add_spec": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file being uploaded.",
                    "type": "string"
                },
                "source_type": {
                    "description": "The source type (SourceType) from which the file content will be retrieved.",
                    "$ref": "#/definitions/content.library.item.updatesession.file.source_type"
                },
                "source_endpoint": {
                    "description": "Location from which the Content Library Service will fetch the file, rather than requiring a client to upload the file.\nThis field is optional and it is only relevant when the value of File.AddSpec.source-type is PULL.",
                    "$ref": "#/definitions/content.library.item.transfer_endpoint"
                },
                "size": {
                    "description": "The file size, in bytes.\nIf unset, the server will not verify it received the correct size.",
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_info": {
                    "description": "The checksum of the file. If specified, the server will verify the checksum once the file is received. If there is a mismatch, the upload will fail. For ova files, this value should not be set.\nIf unset, the server will not verify the checksum.",
                    "$ref": "#/definitions/content.library.item.file.checksum_info"
                }
            },
            "required": [
                "name",
                "source_type"
            ]
        },
        "content.library.item.updatesession.file.info": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "source_type": {
                    "description": "The source type (SourceType) from which the file is being retrieved. This may be NONE if the file is not being changed.",
                    "$ref": "#/definitions/content.library.item.updatesession.file.source_type"
                },
                "size": {
                    "description": "The file size, in bytes as received by the server. This field is guaranteed to be set when the server has completely received the file.\nThis field won't be set until the file status is READY.",
                    "type": "integer",
                    "format": "int64"
                },
                "checksum_info": {
                    "description": "The checksum information of the file received by the server.\nIf unset, the server does not verify the checksum.",
                    "$ref": "#/definitions/content.library.item.file.checksum_info"
                },
                "source_endpoint": {
                    "description": "A source endpoint from which to retrieve the file.\nThis field is optional and it is only relevant when the value of File.Info.source-type is PULL.",
                    "$ref": "#/definitions/content.library.item.transfer_endpoint"
                },
                "upload_endpoint": {
                    "description": "An upload endpoint to which the client can push the content.\nThis field is optional and it is only relevant when the value of File.Info.source-type is PUSH.",
                    "$ref": "#/definitions/content.library.item.transfer_endpoint"
                },
                "bytes_transferred": {
                    "description": "The number of bytes of this file that have been received by the server.",
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "description": "The transfer status (TransferStatus) of this file.",
                    "$ref": "#/definitions/content.library.item.transfer_status"
                },
                "error_message": {
                    "description": "Details about the transfer error.\nAn error message is set if the status is ERROR.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "keep_in_storage": {
                    "description": "Whether or not the file will be kept in storage upon update session completion. The flag is true for most files, and false for metadata files such as manifest and certificate file of update session with library item type OVF. Any file with File.Info.keep-in-storage set to false will not show up in the list of files returned from File.list upon update session completion.\nIf unset, the file will be kept in storage upon update session completion.",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "source_type",
                "bytes_transferred",
                "status"
            ]
        },
        "content.library.item.updatesession.file.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.updatesession.file.info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.updatesession.file.source_type": {
            "type": "string",
            "description": "The File.SourceType enumerated type defines how the file content is retrieved.",
            "enum": [
                "NONE",
                "PUSH",
                "PULL"
            ]
        },
        "content.library.item.updatesession.file.validate_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.updatesession.file.validation_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.updatesession.file.validation_error": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "error_message": {
                    "description": "A message indicating why the file was considered invalid.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                }
            },
            "required": [
                "name",
                "error_message"
            ]
        },
        "content.library.item.updatesession.file.validation_result": {
            "type": "object",
            "properties": {
                "has_errors": {
                    "description": "Whether the validation was succesful or not. In case of errors, the File.ValidationResult.missing-files and File.ValidationResult.invalid-files will contain at least one entry.",
                    "type": "boolean"
                },
                "missing_files": {
                    "description": "A set containing the names of the files that are required but the client hasn't added.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "invalid_files": {
                    "description": "A list containing the files that have been identified as invalid and details about the error.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.updatesession.file.validation_error"
                    }
                }
            },
            "required": [
                "has_errors",
                "missing_files",
                "invalid_files"
            ]
        },
        "content.library.item.updatesession.file_add": {
            "type": "object",
            "properties": {
                "file_spec": {
                    "$ref": "#/definitions/content.library.item.updatesession.file.add_spec",
                    "description": "Specification for the file that needs to be added or updated. This includes whether the client wants to push the content or have the server pull it."
                }
            },
            "required": [
                "file_spec"
            ]
        },
        "content.library.item.updatesession.file_get": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "Name of the file."
                }
            },
            "required": [
                "file_name"
            ]
        },
        "content.library.item.updatesession.file_remove": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "Name of the file to be removed."
                }
            },
            "required": [
                "file_name"
            ]
        },
        "content.library.item.updatesession.file_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item.updatesession.file.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item.updatesession.preview_info": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "Indicates the state of the preview of the update session.",
                    "$ref": "#/definitions/content.library.item.updatesession.preview_info.state"
                },
                "certificate_info": {
                    "description": "The certificate information of the signed update session content.\nThis field is unset if the update session content is not signed.",
                    "$ref": "#/definitions/content.library.item.updatesession.certificate_info"
                },
                "warnings": {
                    "description": "The list of warnings raised for this update session. Any warning which is not ignored by the client will, by default, fail the update session during session complete operation.\nThis field is optional and it is only relevant when the value of PreviewInfo.state is AVAILABLE.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.updatesession.preview_warning_info"
                    }
                },
                "cert_chain": {
                    "description": "Certificate chain in base64 format.\nThis field is unset if the update session content is not signed.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "state"
            ]
        },
        "content.library.item.updatesession.preview_info.state": {
            "type": "string",
            "description": "The PreviewInfo.State enumerated type defines the state of the update session's preview.",
            "enum": [
                "UNAVAILABLE",
                "NOT_APPLICABLE",
                "PREPARING",
                "AVAILABLE"
            ]
        },
        "content.library.item.updatesession.preview_warning_info": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The warning type raised during preview of the update session.",
                    "$ref": "#/definitions/content.library.item.updatesession.warning_type"
                },
                "message": {
                    "description": "The message specifying more details about the warning.",
                    "$ref": "#/definitions/vapi.std.localizable_message"
                },
                "ignored": {
                    "description": "Indicates if this warning will be ignored during session complete operation.",
                    "type": "boolean"
                }
            },
            "required": [
                "type",
                "message",
                "ignored"
            ]
        },
        "content.library.item.updatesession.warning_behavior": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "The warning type which may be raised during the update session.",
                    "$ref": "#/definitions/content.library.item.updatesession.warning_type"
                },
                "ignored": {
                    "description": "Indicates if this warning will be ignored during session complete operation.",
                    "type": "boolean"
                }
            },
            "required": [
                "type",
                "ignored"
            ]
        },
        "content.library.item.updatesession.warning_type": {
            "type": "string",
            "description": "The WarningType enumerated type defines the warnings which can be raised during the update session.",
            "enum": [
                "SELF_SIGNED_CERTIFICATE",
                "EXPIRED_CERTIFICATE",
                "NOT_YET_VALID_CERTIFICATE",
                "UNTRUSTED_CERTIFICATE"
            ]
        },
        "content.library.item_copy": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "A unique token generated on the client for each copy request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent copy.\nIf not specified copy is not idempotent."
                },
                "destination_create_spec": {
                    "$ref": "#/definitions/content.library.item_model",
                    "description": "Specification for the new library item to be created."
                }
            },
            "required": [
                "destination_create_spec"
            ]
        },
        "content.library.item_create": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                },
                "create_spec": {
                    "$ref": "#/definitions/content.library.item_model",
                    "description": "Specification that defines the properties of the new library item."
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "content.library.item_find": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/content.library.item.find_spec",
                    "description": "Specification describing what properties to filter on."
                }
            },
            "required": [
                "spec"
            ]
        },
        "content.library.item_model": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "A unique identifier for this library item.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "library_id": {
                    "description": "The identifier of the LibraryModel to which this item belongs.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "content_version": {
                    "description": "The latest version of the file content list of this library item.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.item.Version. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.item.Version.",
                    "type": "string"
                },
                "creation_time": {
                    "description": "The date and time when this library item was created.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "A human-readable description for this library item.\nThis field is optional for the create operation. Leaving it unset during creation will result in an empty string value. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that the description remains unchanged.",
                    "type": "string"
                },
                "last_modified_time": {
                    "description": "The date and time when the metadata for this library item was last changed. \n This field is affected by changes to the properties or file content of this item. It is not modified by changes to the tags of the item, or by changes to the library which owns this item.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "last_sync_time": {
                    "description": "The date and time when this library item was last synchronized. \n This field is updated every time a synchronization is triggered on the library item, including when a synchronization is triggered on the library to which this item belongs. The value is unset for a library item that belongs to a local library.\n\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "metadata_version": {
                    "description": "A version number for the metadata of this library item. \n This value is incremented with each change to the metadata of this item. Changes to name, description, and so on will increment this value. The value is not incremented by changes to the content or tags of the item or the library which owns it.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for this library item. \n The name may not be unset or an empty string. The name does not have to be unique, even within the same library.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "cached": {
                    "description": "The status that indicates whether the library item is on disk or not. The library item is cached when all its files are on disk.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "boolean"
                },
                "size": {
                    "description": "The library item size, in bytes. The size is the sum of the size used on the storage backing for all the files in the item. When the library item is not cached, the size is 0.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "description": "An optional type identifier which indicates the type adapter plugin to use. \n This field may be set to a non-empty string value that corresponds to an identifier supported by a type adapter plugin present in the Content Library Service. A type adapter plugin, if present for the specified type, can provide additional information and services around the item content. A type adapter can guide the upload process by creating file entries that are in need of being uploaded to complete an item. \n\n The types and plugins supported by the Content Library Service can be queried using the Type service.\n\nThis field is optional for the create and update operations. During creation, if the type is left unspecified, or if the type is specified but does not have a corresponding type support plugin, then the type of the library item is considered to be generic and all data is treated as generic files. During update, if the type is not specified, then it is not updated.",
                    "type": "string"
                },
                "version": {
                    "description": "A version number that is updated on metadata changes. This value is used to validate update requests to provide optimistic concurrency of changes. \n This value represents a number that is incremented every time library item properties, such as name or description, are changed. It is not incremented by changes to the file content of the library item, including adding or removing files. It is also not affected by tagging the library item.\n\nThis field is not used for the create operation. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that you do not need to detect concurrent updates.",
                    "type": "string"
                },
                "source_id": {
                    "description": "The identifier of the ItemModel to which this item is synchronized to if the item belongs to a subscribed library. The value is unset for a library item that belongs to a local library.\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item.",
                    "type": "string"
                },
                "security_compliance": {
                    "description": "Shows the security compliance of ItemModel.\nThis field is not used for the create and update operations. It will be present in the result of a get or list operation.",
                    "type": "boolean"
                },
                "certificate_verification_info": {
                    "description": "Certificate verification status and ItemModel's signing certificate . Currently, this field is available only in following cases 1. This item belongs to a secure content library 2. The item is of type ovf.\nThis field is not used for the create and update operations. It may be present in the result of a get or list operation.",
                    "$ref": "#/definitions/content.library.item.certificate_verification_info"
                }
            }
        },
        "content.library.item_publish": {
            "type": "object",
            "properties": {
                "force_sync_content": {
                    "type": "boolean",
                    "description": "Whether to synchronize file content as well as metadata. This parameter applies only if the subscription is on-demand."
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.item.destination_spec"
                    },
                    "description": "The list of subscriptions to publish this library item to."
                }
            },
            "required": [
                "force_sync_content"
            ]
        },
        "content.library.item_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.item_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.item_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "$ref": "#/definitions/content.library.item_model",
                    "description": "Specification of the properties to set."
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "content.library.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.optimization_info": {
            "type": "object",
            "properties": {
                "optimize_remote_publishing": {
                    "description": "If set to true then library would be optimized for remote publishing. \n Turn it on if remote publishing is dominant use case for this library. Remote publishing means here that publisher and subscribers are not the part of the same Vcenter SSO domain. \n\n Any optimizations could be done as result of turning on this optimization during library creation. For example, library content could be stored in different format but optimizations are not limited to just storage format. \n\n Note, that value of this toggle could be set only during creation of the library and you would need to migrate your library in case you need to change this value (optimize the library for different use case).\n\nThis field is optional for the create operation. If not specified for the create, the default is for the library to not be optmized for specific use case. It is not used for the update operation.",
                    "type": "boolean"
                }
            }
        },
        "content.library.publish_info": {
            "type": "object",
            "properties": {
                "authentication_method": {
                    "description": "Indicates how a subscribed library should authenticate (AuthenticationMethod) to the published library endpoint.\nThis field is required for the LocalLibrary.create operation. It is optional for the LocalLibrary.update operation, and if unset the value will not be changed. When the existing authentication method is BASIC and authentication is being turned off by updating this field to NONE, then the PublishInfo.current-password field is required. This field will always be present in the results of the LocalLibrary.get operation.",
                    "$ref": "#/definitions/content.library.publish_info.authentication_method"
                },
                "published": {
                    "description": "Whether the local library is published.\nThis field is required for the LocalLibrary.create operation. It is optional for the LocalLibrary.update operation, and if unset the value will not be changed. When the existing authentication method is BASIC and the local library is published, the PublishInfo.current-password field is required before turning off publishing. This field will always be present in the results of the LocalLibrary.get operation.",
                    "type": "boolean"
                },
                "publish_url": {
                    "description": "The URL to which the library metadata is published by the Content Library Service. \n This value can be used to set the SubscriptionInfo.subscription-url property when creating a subscribed library.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "uri"
                },
                "user_name": {
                    "description": "The username to require for authentication.\nThis field is optional for the LocalLibrary.create and LocalLibrary.update operations. When the authentication method is NONE, the username can be left unset. When the authentication method is BASIC, the username is ignored in the current release. It defaults to \"vcsp\". It is preferable to leave this unset. If specified, it must be set to \"vcsp\".",
                    "type": "string"
                },
                "password": {
                    "description": "The new password to require for authentication.\nThis field is optional for the LocalLibrary.create operation. When the authentication method is NONE, the password can be left unset. When the authentication method is BASIC, the password should be a non-empty string. This field is optional for the LocalLibrary.update operation. Leaving it unset during update indicates that the password is not changed. When the password is changed, the PublishInfo.current-password field is required. This field is not used for the LocalLibrary.get operation.",
                    "type": "string",
                    "format": "password"
                },
                "current_password": {
                    "description": "The current password to verify. This field is available starting in vSphere 6.7.\nThis field is unused for the LocalLibrary.create operation. This field is optional for the LocalLibrary.update operation. When the existing authentication method is NONE, the current password can be left unset. When the existing authentication method is BASIC, the current password is verified before applying the new PublishInfo.password, turning off authentication, or unpublishing the library. This field is not used for the LocalLibrary.get operation.",
                    "type": "string",
                    "format": "password"
                },
                "persist_json_enabled": {
                    "description": "Whether library and library item metadata are persisted in the storage backing as JSON files. This flag only applies if the local library is published. \n Enabling JSON persistence allows you to synchronize a subscribed library manually instead of over HTTP. You copy the local library content and metadata to another storage backing manually and then create a subscribed library referencing the location of the library JSON file in the SubscriptionInfo.subscription-url. When the subscribed library's storage backing matches the subscription URL, files do not need to be copied to the subscribed library. \n\n For a library backed by a datastore, the library JSON file will be stored at the path contentlib-{library_id}/lib.json on the datastore. \n\n For a library backed by a remote file system, the library JSON file will be stored at {library_id}/lib.json in the remote file system path.\n\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                }
            }
        },
        "content.library.publish_info.authentication_method": {
            "type": "string",
            "description": "The PublishInfo.AuthenticationMethod enumerated type indicates how a subscribed library should authenticate to the published library endpoint.",
            "enum": [
                "BASIC",
                "NONE"
            ]
        },
        "content.library.source_info": {
            "type": "object",
            "properties": {
                "source_library": {
                    "description": "Identifier of the published library.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "subscription": {
                    "description": "Identifier of the subscription associated with the subscribed library.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                }
            }
        },
        "content.library.storage_backing": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type (Type) of StorageBacking.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/content.library.storage_backing.type"
                },
                "datastore_id": {
                    "description": "Identifier of the datastore used to store the content in the library.\nThis field is optional and it is only relevant when the value of StorageBacking.type is DATASTORE.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore.",
                    "type": "string"
                },
                "storage_uri": {
                    "description": "URI identifying the location used to store the content in the library. \n The following URI formats are supported: \n\n vSphere 6.5 \n\n   - nfs://server/path?version=4 (for vCenter Server Appliance only) - Specifies an NFS Version 4 server.\n   - nfs://server/path (for vCenter Server Appliance only) - Specifies an NFS Version 3 server. The nfs://server:/path format is also supported.\n   - smb://server/path - Specifies an SMB server or Windows share.\n  \n vSphere 6.0 Update 1 \n\n   - nfs://server:/path (for vCenter Server Appliance only)\n   - file://unc-server/path (for vCenter Server for Windows only)\n   - file:///mount/point (for vCenter Server Appliance only) - Local file URIs are supported only when the path is a local mount point for an NFS file system. Use of file URIs is strongly discouraged. Instead, use an NFS URI to specify the remote file system.\n  \n vSphere 6.0 \n\n   - nfs://server:/path (for vCenter Server Appliance only)\n   - file://unc-server/path (for vCenter Server for Windows only)\n   - file:///path - Local file URIs are supported but strongly discouraged because it may interfere with the performance of vCenter Server.\n \nThis field is optional and it is only relevant when the value of StorageBacking.type is OTHER.",
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "content.library.storage_backing.type": {
            "type": "string",
            "description": "The StorageBacking.Type enumerated type specifies the type of the StorageBacking.",
            "enum": [
                "DATASTORE",
                "OTHER"
            ]
        },
        "content.library.subscribed_item_sync": {
            "type": "object",
            "properties": {
                "force_sync_content": {
                    "type": "boolean",
                    "description": "Whether to synchronize file content as well as metadata. This parameter applies only if the subscription is on-demand."
                },
                "sync_optional_files": {
                    "type": "boolean",
                    "description": "Whether to synchronize optional files. This parameter applies to both types of subscriptions on-demand as well as sync-immediately.\nThis parameter is optional because it was added in a newer version than its parent node."
                }
            },
            "required": [
                "force_sync_content"
            ]
        },
        "content.library.subscription_info": {
            "type": "object",
            "properties": {
                "authentication_method": {
                    "description": "Indicate how the subscribed library should authenticate (AuthenticationMethod) with the published library endpoint.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "$ref": "#/definitions/content.library.subscription_info.authentication_method"
                },
                "automatic_sync_enabled": {
                    "description": "Whether the library should participate in automatic library synchronization. In order for automatic synchronization to happen, the global ConfigurationModel.automatic-sync-enabled option must also be true. The subscription is still active even when automatic synchronization is turned off, but synchronization is only activated with an explicit call to SubscribedLibrary.sync or SubscribedItem.sync. In other words, manual synchronization is still available even when automatic synchronization is disabled.\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                },
                "on_demand": {
                    "description": "Indicates whether a library item's content will be synchronized only on demand. \n If this is set to true, then the library item's metadata will be synchronized but the item's content (its files) will not be synchronized. The Content Library Service will synchronize the content upon request only. This can cause the first use of the content to have a noticeable delay. \n\n Items without synchronized content can be forcefully synchronized in advance using the SubscribedItem.sync call with forceSyncContent set to true. Once content has been synchronized, the content can removed with the SubscribedItem.evict call. \n\n If this value is set to false, all content will be synchronized in advance.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "boolean"
                },
                "password": {
                    "description": "The password to use when authenticating. \n The password must be set when using a password-based authentication method; empty strings are not allowed.\n\nThis field is optional for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string",
                    "format": "password"
                },
                "ssl_thumbprint": {
                    "description": "An optional SHA-1 hash of the SSL certificate for the remote endpoint. \n If this value is defined the SSL certificate will be verified by comparing it to the SSL thumbprint. The SSL certificate must verify against the thumbprint. When specified, the standard certificate chain validation behavior is not used. The certificate chain is validated normally if this value is unset. The specified sslThumbprint will not be checked for SSL certificate validation if {SubscriptionInfo#sslCertificate} is also set.\n\nThis field is optional for the create operation. It will not be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "subscription_url": {
                    "description": "The URL of the endpoint where the metadata for the remotely published library is being served. \n This URL can be the PublishInfo.publish-url of the published library (for example, https://server/path/lib.json). \n\n If the source content comes from a published library with PublishInfo.persist-json-enabled, the subscription URL can be a URL pointing to the library JSON file on a datastore or remote file system. The supported formats are: \n\n vSphere 6.5 \n\n   - ds:///vmfs/volumes/{uuid}/mylibrary/lib.json (for datastore)\n   - nfs://server/path/mylibrary/lib.json (for NFSv3 server on vCenter Server Appliance)\n   - nfs://server/path/mylibrary/lib.json?version=4 (for NFSv4 server on vCenter Server Appliance) \n   - smb://server/path/mylibrary/lib.json (for SMB server)\n  \n vSphere 6.0 \n\n   - file://server/mylibrary/lib.json (for UNC server on vCenter Server for Windows)\n   - file:///path/mylibrary/lib.json (for local file system)\n  \n When you specify a DS subscription URL, the datastore must be on the same vCenter Server as the subscribed library. When you specify an NFS or SMB subscription URL, the StorageBacking.storage-uri of the subscribed library must be on the same remote file server and should share a common parent path with the subscription URL.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string",
                    "format": "uri"
                },
                "user_name": {
                    "description": "The username to use when authenticating. \n The username must be set when using a password-based authentication method. Empty strings are allowed for usernames.\n\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "source_info": {
                    "description": "Information about the source published library. This field will be set for a subscribed library which is associated with a subscription of the published library.\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "$ref": "#/definitions/content.library.source_info"
                }
            }
        },
        "content.library.subscription_info.authentication_method": {
            "type": "string",
            "description": "Indicate how the subscribed library should authenticate with the published library endpoint.",
            "enum": [
                "BASIC",
                "NONE"
            ]
        },
        "content.library.subscriptions.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.subscriptions.create_spec": {
            "type": "object",
            "properties": {
                "subscribed_library": {
                    "description": "Specification for the subscribed library to be associated with the subscription.",
                    "$ref": "#/definitions/content.library.subscriptions.create_spec_subscribed_library"
                }
            },
            "required": [
                "subscribed_library"
            ]
        },
        "content.library.subscriptions.create_spec_new_subscribed_library": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the subscribed library.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the subscribed library.\nIf unset, the description will be an empty string.",
                    "type": "string"
                },
                "storage_backings": {
                    "description": "The list of default storage backings for this library. \n The list must contain exactly one storage backing. Multiple default storage locations are not currently supported but may become supported in future releases.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.storage_backing"
                    }
                },
                "automatic_sync_enabled": {
                    "description": "Specifies whether the library should participate in automatic library synchronization.",
                    "type": "boolean"
                },
                "on_demand": {
                    "description": "Specifies whether a library item's content will be synchronized only on demand.",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "storage_backings",
                "automatic_sync_enabled",
                "on_demand"
            ]
        },
        "content.library.subscriptions.create_spec_placement": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable folder for the virtual machine template; if a folder cannot be chosen, publishing a virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed. If Subscriptions.CreateSpecPlacement.cluster and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.cluster. If Subscriptions.CreateSpecPlacement.cluster and Subscriptions.CreateSpecPlacement.host are both specified, Subscriptions.CreateSpecPlacement.host must be a member of Subscriptions.CreateSpecPlacement.cluster.\nIf Subscriptions.CreateSpecPlacement.resource-pool or Subscriptions.CreateSpecPlacement.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed. If Subscriptions.CreateSpecPlacement.host and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.host. If Subscriptions.CreateSpecPlacement.cluster and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.cluster.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable resource pool for the virtual machine template; if a resource pool cannot be chosen, publish of virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If Subscriptions.CreateSpecPlacement.host and Subscriptions.CreateSpecPlacement.resource-pool are both specified, Subscriptions.CreateSpecPlacement.resource-pool must belong to Subscriptions.CreateSpecPlacement.host. If Subscriptions.CreateSpecPlacement.host and Subscriptions.CreateSpecPlacement.cluster are both specified, Subscriptions.CreateSpecPlacement.host must be a member of Subscriptions.CreateSpecPlacement.cluster.\nIf this is unset, the system will attempt to choose a suitable host for the virtual machine template; if a host cannot be chosen, publishing the virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "network": {
                    "description": "Network that backs the virtual Ethernet adapters in the virtual machine template.\nIf unset, the virtual Ethernet adapters will not be backed by a network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                }
            }
        },
        "content.library.subscriptions.create_spec_subscribed_library": {
            "type": "object",
            "properties": {
                "target": {
                    "description": "Specifies whether the target subscribed library should be newly created or an existing subscribed library should be used.",
                    "$ref": "#/definitions/content.library.subscriptions.create_spec_subscribed_library.target"
                },
                "new_subscribed_library": {
                    "description": "Specification for creating a new subscribed library associated with the subscription.\nThis field is optional and it is only relevant when the value of Subscriptions.CreateSpecSubscribedLibrary.target is CREATE_NEW.",
                    "$ref": "#/definitions/content.library.subscriptions.create_spec_new_subscribed_library"
                },
                "subscribed_library": {
                    "description": "Identifier of the existing subscribed library to associate with the subscription. Only the subscribed libraries for which SubscriptionInfo.subscription-url property is set to the PublishInfo.publish-url of the published library can be associated with the subscription.\nThis field is optional and it is only relevant when the value of Subscriptions.CreateSpecSubscribedLibrary.target is USE_EXISTING.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "location": {
                    "description": "Location of the subscribed library relative to the published library.",
                    "$ref": "#/definitions/content.library.subscriptions.location"
                },
                "vcenter": {
                    "description": "Specification for the subscribed library's vCenter Server instance.\nThis field is optional and it is only relevant when the value of Subscriptions.CreateSpecSubscribedLibrary.location is REMOTE.",
                    "$ref": "#/definitions/content.library.subscriptions.create_spec_vcenter"
                },
                "placement": {
                    "description": "Placement specification for the virtual machine template library items on the subscribed library.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable placement specification for the virtual machine template items; if a placement specification cannot be chosen, publish of virtual machine template items will fail.",
                    "$ref": "#/definitions/content.library.subscriptions.create_spec_placement"
                }
            },
            "required": [
                "target",
                "location"
            ]
        },
        "content.library.subscriptions.create_spec_subscribed_library.target": {
            "type": "string",
            "description": "The Subscriptions.CreateSpecSubscribedLibrary.Target enumerated type defines the options related to the target subscribed library which will be associated with the subscription.",
            "enum": [
                "CREATE_NEW",
                "USE_EXISTING"
            ]
        },
        "content.library.subscriptions.create_spec_vcenter": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "The hostname of the subscribed library's vCenter Server.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the vCenter Server instance where the subscribed library exists.\nIf unset, port 443 will be used.",
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "hostname"
            ]
        },
        "content.library.subscriptions.info": {
            "type": "object",
            "properties": {
                "subscribed_library": {
                    "description": "Identifier of the subscribed library associated with the subscription.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "subscribed_library_name": {
                    "description": "Name of the subscribed library associated with the subscription.",
                    "type": "string"
                },
                "subscribed_library_location": {
                    "description": "Location of the subscribed library relative to the published library.",
                    "$ref": "#/definitions/content.library.subscriptions.location"
                },
                "subscribed_library_vcenter": {
                    "description": "Information about the vCenter Server instance where the subscribed library exists.\nThis field is optional and it is only relevant when the value of Subscriptions.Info.subscribed-library-location is REMOTE.",
                    "$ref": "#/definitions/content.library.subscriptions.vcenter_info"
                },
                "subscribed_library_placement": {
                    "description": "Placement information about the subscribed library's virtual machine template items.",
                    "$ref": "#/definitions/content.library.subscriptions.placement_info"
                }
            },
            "required": [
                "subscribed_library",
                "subscribed_library_name",
                "subscribed_library_location",
                "subscribed_library_placement"
            ]
        },
        "content.library.subscriptions.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.subscriptions.summary"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.subscriptions.location": {
            "type": "string",
            "description": "The Subscriptions.Location enumerated type defines the location of subscribed library relative to the published library.",
            "enum": [
                "LOCAL",
                "REMOTE"
            ]
        },
        "content.library.subscriptions.placement_info": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.\nThe field will be unset if the subscribed library associated with the subscription does not have a virtual machine folder.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed.\nThe field will be unset if the subscribed library associated with the subscription does not have a cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed.\nThe field will be unset if the subscribed library associated with the subscription does not have a resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If Subscriptions.PlacementInfo.host and Subscriptions.PlacementInfo.resource-pool are both specified, Subscriptions.PlacementInfo.resource-pool must belong to Subscriptions.PlacementInfo.host. If Subscriptions.PlacementInfo.host and Subscriptions.PlacementInfo.cluster are both specified, Subscriptions.PlacementInfo.host must be a member of Subscriptions.PlacementInfo.cluster.\nThe field will be unset if the subscribed library associated with the subscription does not have a host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "network": {
                    "description": "Network that backs the virtual Ethernet adapters in the virtual machine template.\nThe field will be unset if the subscribed library associated with the subscription does not have a network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                }
            }
        },
        "content.library.subscriptions.summary": {
            "type": "object",
            "properties": {
                "subscription": {
                    "description": "Identifier of the subscription.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                },
                "subscribed_library": {
                    "description": "Identifier of the subscribed library.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "subscribed_library_name": {
                    "description": "Name of the subscribed library.",
                    "type": "string"
                },
                "subscribed_library_vcenter_hostname": {
                    "description": "Hostname of the vCenter instance where the subscribed library exists.\nThis field is unset if the subscribed library is on the same vCenter Server instance as the published library.",
                    "type": "string"
                }
            },
            "required": [
                "subscription",
                "subscribed_library",
                "subscribed_library_name"
            ]
        },
        "content.library.subscriptions.update_spec": {
            "type": "object",
            "properties": {
                "subscribed_library_vcenter": {
                    "description": "Specification for the subscribed library's vCenter Server instance.\nIf unset, the value is unchanged.",
                    "$ref": "#/definitions/content.library.subscriptions.update_spec_vcenter"
                },
                "subscribed_library_placement": {
                    "description": "Placement specification for the virtual machine template items of the subscribed library. Updating this information will only affect new or updated items, existing items will not be moved. The entire placement configuration of the subscribed library will replaced by the new specification.\nIf unset, the placement configuration of the subscribed library will be unchanged.",
                    "$ref": "#/definitions/content.library.subscriptions.update_spec_placement"
                }
            }
        },
        "content.library.subscriptions.update_spec_placement": {
            "type": "object",
            "properties": {
                "folder": {
                    "description": "Virtual machine folder into which the virtual machine template should be placed.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable folder for the virtual machine template; if a folder cannot be chosen, publishing a virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter.",
                    "type": "string"
                },
                "cluster": {
                    "description": "Cluster onto which the virtual machine template should be placed. If Subscriptions.UpdateSpecPlacement.cluster and Subscriptions.UpdateSpecPlacement.resource-pool are both specified, Subscriptions.UpdateSpecPlacement.resource-pool must belong to Subscriptions.UpdateSpecPlacement.cluster. If Subscriptions.UpdateSpecPlacement.cluster and Subscriptions.UpdateSpecPlacement.host are both specified, Subscriptions.UpdateSpecPlacement.host must be a member of Subscriptions.UpdateSpecPlacement.cluster. If Subscriptions.UpdateSpecPlacement.resource-pool or Subscriptions.UpdateSpecPlacement.host is specified, it is recommended that this field be unset.\nIf Subscriptions.UpdateSpecPlacement.resource-pool or Subscriptions.UpdateSpecPlacement.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.",
                    "type": "string"
                },
                "resource_pool": {
                    "description": "Resource pool into which the virtual machine template should be placed.\nThis field is currently required. In future, if this is unset, the system will attempt to choose a suitable resource pool for the virtual machine template; if a resource pool cannot be chosen, publish of virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter.",
                    "type": "string"
                },
                "host": {
                    "description": "Host onto which the virtual machine template should be placed. If Subscriptions.UpdateSpecPlacement.host and Subscriptions.UpdateSpecPlacement.resource-pool are both specified, Subscriptions.UpdateSpecPlacement.resource-pool must belong to Subscriptions.UpdateSpecPlacement.host. If Subscriptions.UpdateSpecPlacement.host and Subscriptions.UpdateSpecPlacement.cluster are both specified, Subscriptions.UpdateSpecPlacement.host must be a member of Subscriptions.UpdateSpecPlacement.cluster.\nIf this is unset, the system will attempt to choose a suitable host for the virtual machine template; if a host cannot be chosen, publishing the virtual machine template item will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.",
                    "type": "string"
                },
                "network": {
                    "description": "Network that backs the virtual Ethernet adapters in the virtual machine template.\nIf unset, newly published virtual machine template library items will not be backed by a network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.",
                    "type": "string"
                }
            }
        },
        "content.library.subscriptions.update_spec_vcenter": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "The hostname of the subscribed library's vCenter Server.\nIf unset, the value is unchanged.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the vCenter Server instance where the subscribed library exists.\nIf unset, the value is unchanged.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "content.library.subscriptions.vcenter_info": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "Hostname of the vCenter Server instance where the subscribed library exists.",
                    "type": "string"
                },
                "https_port": {
                    "description": "The HTTPS port of the vCenter Server instance where the subscribed library exists.\nIf unset, port 443 will be used.",
                    "type": "integer",
                    "format": "int64"
                },
                "server_guid": {
                    "description": "The unique identifier of the vCenter Server where the subscribed library exists.",
                    "type": "string"
                }
            },
            "required": [
                "hostname",
                "server_guid"
            ]
        },
        "content.library.subscriptions_create": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified, creation is not idempotent."
                },
                "spec": {
                    "$ref": "#/definitions/content.library.subscriptions.create_spec",
                    "description": "Specification for the subscription."
                }
            },
            "required": [
                "spec"
            ]
        },
        "content.library.subscriptions_delete": {
            "type": "object",
            "properties": {
                "subscription": {
                    "type": "string",
                    "description": "Subscription identifier.\nThe parameter must be an identifier for the resource type: content.library.Subscriptions."
                }
            },
            "required": [
                "subscription"
            ]
        },
        "content.library.subscriptions_get": {
            "type": "object",
            "properties": {
                "subscription": {
                    "type": "string",
                    "description": "Identifier of the subscription.\nThe parameter must be an identifier for the resource type: content.library.Subscriptions."
                }
            },
            "required": [
                "subscription"
            ]
        },
        "content.library.subscriptions_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library.subscriptions.info"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library.subscriptions_update": {
            "type": "object",
            "properties": {
                "subscription": {
                    "type": "string",
                    "description": "subscription identifier.\nThe parameter must be an identifier for the resource type: content.library.Subscriptions."
                },
                "spec": {
                    "$ref": "#/definitions/content.library.subscriptions.update_spec",
                    "description": "Specification of the new property values to set on the subscription."
                }
            },
            "required": [
                "subscription",
                "spec"
            ]
        },
        "content.library_find": {
            "type": "object",
            "properties": {
                "spec": {
                    "$ref": "#/definitions/content.library.find_spec",
                    "description": "Specification describing what properties to filter on."
                }
            },
            "required": [
                "spec"
            ]
        },
        "content.library_model": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "An identifier which uniquely identifies this LibraryModel.\nThis field is not used for the create operation. It will not be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "creation_time": {
                    "description": "The date and time when this library was created.\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "A human-readable description for this library.\nThis field is optional for the create operation. Leaving it unset during creation will result in an empty string value. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that the description should be left unchanged.",
                    "type": "string"
                },
                "last_modified_time": {
                    "description": "The date and time when this library was last updated. \n This field is updated automatically when the library properties are changed. This field is not affected by adding, removing, or modifying a library item or its content within the library. Tagging the library or syncing the subscribed library does not alter this field.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "last_sync_time": {
                    "description": "The date and time when this library was last synchronized. \n This field applies only to subscribed libraries. It is updated every time a synchronization is triggered on the library. The value is unset for a local library.\n\nThis field is not used for the create operation. It is optional in the result of the get or list operations. It is not used for the update operation.",
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "The name of the library. \n A Library is identified by a human-readable name. Library names cannot be undefined or an empty string. Names do not have to be unique.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is optional for the update operation.",
                    "type": "string"
                },
                "storage_backings": {
                    "description": "The list of default storage backings which are available for this library. \n A StorageBacking defines a default storage location which can be used to store files for library items in this library. Some library items, for instance, virtual machine template items, support files that may be distributed across various storage backings. One or more item files may or may not be located on the default storage backing. \n\n Multiple default storage locations are not currently supported but may become supported in future releases.\n\nThis field must be provided for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.library.storage_backing"
                    }
                },
                "type": {
                    "description": "The type (LibraryModel.LibraryType) of this library. \n This value can be used to determine what additional services and information can be available for this library. This field is not used for the create and update operations. It will always be present in the result of a get operation.\n\nThis field is not used for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.",
                    "$ref": "#/definitions/content.library_model.library_type"
                },
                "optimization_info": {
                    "description": "Defines various optimizations and optimization parameters applied to this library.\nThis field is optional for the create operation. It is optional in the result of the get or list operations. It is optional for the update operation.",
                    "$ref": "#/definitions/content.library.optimization_info"
                },
                "version": {
                    "description": "A version number which is updated on metadata changes. This value allows clients to detect concurrent updates and prevent accidental clobbering of data. \n This value represents a number which is incremented every time library properties, such as name or description, are changed. It is not incremented by changes to a library item within the library, including adding or removing items. It is also not affected by tagging the library.\n\nThis field is not used for the create operation. It will always be present in the result of a get or list operation. It is optional for the update operation. Leaving it unset during update indicates that you do not need to detect concurrent updates.",
                    "type": "string"
                },
                "publish_info": {
                    "description": "Defines how this library is published so that it can be subscribed to by a remote subscribed library. \n The PublishInfo defines where and how the metadata for this local library is accessible. A local library is only published publically if PublishInfo.published is true.\n\nThis field is optional for the create and update operations. If not specified during creation, the default is for the library to not be published. If not specified during update, the field is left unchanged.",
                    "$ref": "#/definitions/content.library.publish_info"
                },
                "subscription_info": {
                    "description": "Defines the subscription behavior for this Library. \n The SubscriptionInfo defines how this subscribed library synchronizes to a remote source. Setting the value will determine the remote source to which the library synchronizes, and how. Changing the subscription will result in synchronizing to a new source. If the new source differs from the old one, the old library items and data will be lost. Setting SubscriptionInfo.automatic-sync-enabled to false will halt subscription but will not remove existing cached data.\n\nThis field is optional for the create and update operations. If not specified during creation, a default will be created without an active subscription. If not specified during update, the field is left unchanged.",
                    "$ref": "#/definitions/content.library.subscription_info"
                },
                "server_guid": {
                    "description": "The unique identifier of the vCenter server where the library exists.\nThis field is optional for the create operation. It will always be present in the result of the get or list operations. It is not used for the update operation.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.",
                    "type": "string"
                },
                "security_policy_id": {
                    "description": "Represents the security policy applied to this library. \n Setting the field will make the library secure. This field is ignored in update operation if LibraryModel.unset-security-policy-id is set to true.\n\nThis field is optional for the create and update operations. If not set in create operation, the library will be insecure. If not specified in update operation, the field is left unchanged.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library.",
                    "type": "string"
                },
                "unset_security_policy_id": {
                    "description": "This represents the intent of the change to LibraryModel.security-policy-id in update operation. \n If this field is set to true, any security policy applied to the library will be removed. If this field is set to false, any security policy applied to library will be changed to the value specified in LibraryModel.security-policy-id, if any.\n\nThis field is optional for the update operation. If unset, any existing security policy will be changed to the value specified in LibraryModel.security-policy-id, if any.",
                    "type": "boolean"
                }
            }
        },
        "content.library_model.library_type": {
            "type": "string",
            "description": "The LibraryModel.LibraryType enumerated type defines the type of a LibraryModel. \n The type of a library can be used to determine which additional services can be performed with a library.",
            "enum": [
                "LOCAL",
                "SUBSCRIBED"
            ]
        },
        "content.library_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.library_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "$ref": "#/definitions/content.library_model",
                    "description": "Specification of the new property values to set on the library."
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "content.local_library.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.local_library.destination_spec": {
            "type": "object",
            "properties": {
                "subscription": {
                    "description": "Identifier of the subscription associated with the subscribed library.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Subscriptions. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Subscriptions.",
                    "type": "string"
                }
            },
            "required": [
                "subscription"
            ]
        },
        "content.local_library.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.local_library_create": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                },
                "create_spec": {
                    "$ref": "#/definitions/content.library_model",
                    "description": "Specification for the new local library."
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "content.local_library_publish": {
            "type": "object",
            "properties": {
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.local_library.destination_spec"
                    },
                    "description": "The list of subscriptions to publish this library to."
                }
            }
        },
        "content.local_library_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.local_library_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "$ref": "#/definitions/content.library_model",
                    "description": "Specification of the new property values to set on the local library."
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "content.security_rule_type": {
            "type": "string",
            "description": "The SecurityRuleType enumerated type defines the security rules which can be applied to different item types.",
            "enum": [
                "OVF_STRICT_VERIFICATION"
            ]
        },
        "content.subscribed_library.create_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.subscribed_library.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "content.subscribed_library.probe_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.subscribed_library.probe_result"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.subscribed_library.probe_result": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The status of probe result. This will be one of Status.",
                    "$ref": "#/definitions/content.subscribed_library.probe_result.status"
                },
                "ssl_thumbprint": {
                    "description": "The SSL thumbprint for the remote endpoint.\nA SSL thumbprint is only returned if the host is secured with SSL/TLS.",
                    "type": "string"
                },
                "error_messages": {
                    "description": "If the probe result is in an error status, this field will contain the detailed error messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                }
            },
            "required": [
                "status",
                "error_messages"
            ]
        },
        "content.subscribed_library.probe_result.status": {
            "type": "string",
            "description": "The SubscribedLibrary.ProbeResult.Status enumerated type defines the error status constants for the probe result.",
            "enum": [
                "SUCCESS",
                "INVALID_URL",
                "TIMED_OUT",
                "HOST_NOT_FOUND",
                "RESOURCE_NOT_FOUND",
                "INVALID_CREDENTIALS",
                "CERTIFICATE_ERROR",
                "UNKNOWN_ERROR"
            ]
        },
        "content.subscribed_library_create": {
            "type": "object",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "Unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: b8a2a2e3-2314-43cd-a871-6ede0f429751. This token can be used to guarantee idempotent creation.\nIf not specified creation is not idempotent."
                },
                "create_spec": {
                    "$ref": "#/definitions/content.library_model",
                    "description": "Specification for the new subscribed library."
                }
            },
            "required": [
                "create_spec"
            ]
        },
        "content.subscribed_library_probe": {
            "type": "object",
            "properties": {
                "subscription_info": {
                    "$ref": "#/definitions/content.library.subscription_info",
                    "description": "The subscription info to be probed."
                }
            },
            "required": [
                "subscription_info"
            ]
        },
        "content.subscribed_library_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/content.library_model"
                }
            },
            "required": [
                "value"
            ]
        },
        "content.subscribed_library_update": {
            "type": "object",
            "properties": {
                "update_spec": {
                    "$ref": "#/definitions/content.library_model",
                    "description": "Specification of the new property values to set on the subscribed library."
                }
            },
            "required": [
                "update_spec"
            ]
        },
        "content.type.info": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "A description of the type support offered by the plugin.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the plugin which provides the type support.",
                    "type": "string"
                },
                "type": {
                    "description": "The type which the plugin supports. \n To upload a library item of the type supported by the plugin, the ItemModel.type field of the item should be set to this value.",
                    "type": "string"
                },
                "vendor": {
                    "description": "The name of the vendor who created the type support plugin.",
                    "type": "string"
                },
                "version": {
                    "description": "The version number of the type support plugin.",
                    "type": "string"
                },
                "supported_rules": {
                    "description": "List of security rules which can be applied to this item type.\nIf unset no security rule can be associated with this item type.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.security_rule_type"
                    }
                }
            },
            "required": [
                "description",
                "name",
                "type",
                "vendor",
                "version"
            ]
        },
        "content.type.list_resp": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content.type.info"
                    }
                }
            },
            "required": [
                "value"
            ]
        },
        "vapi.std.errors.already_exists": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.already_exists_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.already_exists"
                }
            }
        },
        "vapi.std.errors.concurrent_change": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.concurrent_change_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.concurrent_change"
                }
            }
        },
        "vapi.std.errors.error": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.error.type": {
            "type": "string",
            "description": "Enumeration of all standard errors. Used as discriminator in protocols that have no standard means for transporting the error type, e.g. REST.",
            "enum": [
                "ERROR",
                "ALREADY_EXISTS",
                "ALREADY_IN_DESIRED_STATE",
                "CANCELED",
                "CONCURRENT_CHANGE",
                "FEATURE_IN_USE",
                "INTERNAL_SERVER_ERROR",
                "INVALID_ARGUMENT",
                "INVALID_ELEMENT_CONFIGURATION",
                "INVALID_ELEMENT_TYPE",
                "INVALID_REQUEST",
                "NOT_ALLOWED_IN_CURRENT_STATE",
                "NOT_FOUND",
                "OPERATION_NOT_FOUND",
                "RESOURCE_BUSY",
                "RESOURCE_IN_USE",
                "RESOURCE_INACCESSIBLE",
                "SERVICE_UNAVAILABLE",
                "TIMED_OUT",
                "UNABLE_TO_ALLOCATE_RESOURCE",
                "UNAUTHENTICATED",
                "UNAUTHORIZED",
                "UNEXPECTED_INPUT",
                "UNSUPPORTED",
                "UNVERIFIED_PEER"
            ]
        },
        "vapi.std.errors.error_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.error"
                }
            }
        },
        "vapi.std.errors.invalid_argument": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.invalid_argument_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.invalid_argument"
                }
            }
        },
        "vapi.std.errors.invalid_element_configuration": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.invalid_element_configuration_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.invalid_element_configuration"
                }
            }
        },
        "vapi.std.errors.invalid_element_type": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.invalid_element_type_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.invalid_element_type"
                }
            }
        },
        "vapi.std.errors.not_allowed_in_current_state": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.not_allowed_in_current_state_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.not_allowed_in_current_state"
                }
            }
        },
        "vapi.std.errors.not_found": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.not_found_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.not_found"
                }
            }
        },
        "vapi.std.errors.resource_busy": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.resource_busy_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.resource_busy"
                }
            }
        },
        "vapi.std.errors.resource_inaccessible": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.resource_inaccessible_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.resource_inaccessible"
                }
            }
        },
        "vapi.std.errors.unauthenticated": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "Indicates the authentication challenges applicable to the target API provider. It can be used by a client to discover the correct authentication scheme to use. The exact syntax of the value is defined by the specific provider, the protocol and authentication schemes used. \n For example, a provider using REST may adhere to the WWW-Authenticate HTTP header specification, RFC7235, section 4.1. In this case an example challenge value may be: SIGN realm=\"27da1358-2ba4-11e9-b210-d663bd873d93\",sts=\"http://vcenter/sso?vsphere.local\", Basic realm=\"vCenter\"\n\nThis field is optional because it was added in a newer version than its parent node.",
                    "type": "string"
                },
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unauthenticated_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unauthenticated"
                }
            }
        },
        "vapi.std.errors.unauthorized": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unauthorized_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unauthorized"
                }
            }
        },
        "vapi.std.errors.unsupported": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. \n\n Each subsequent message in the stack describes the \"cause\" of the prior message.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vapi.std.localizable_message"
                    }
                },
                "data": {
                    "description": "Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. \n\n The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.",
                    "type": "object"
                },
                "error_type": {
                    "description": "Discriminator field to help API consumers identify the structure type.\nCan be unset for compatibility with preceding implementations.",
                    "$ref": "#/definitions/vapi.std.errors.error.type"
                }
            },
            "required": [
                "messages"
            ]
        },
        "vapi.std.errors.unsupported_error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/vapi.std.errors.unsupported"
                }
            }
        },
        "vapi.std.localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. \n This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "default_message": {
                    "description": "The value of this localizable string or message template in the en_US (English) locale. If LocalizableMessage.id refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user. It could also be used as a fallback if a client is unable to access the appropriate message catalog.",
                    "type": "string"
                },
                "args": {
                    "description": "Positional arguments to be substituted into the message template. This list will be empty if the message uses named arguments or has no arguments.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "params": {
                    "description": "Named arguments to be substituted into the message template.\nUnset means that the message template requires no arguments or positional arguments are used.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/vapi.std.localization_param"
                            }
                        }
                    }
                },
                "localized": {
                    "description": "Localized string value as per request requirements.\nwhen the client has not requested specific locale the implementation may not populate this field to conserve resources.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "default_message",
                "args"
            ]
        },
        "vapi.std.localization_param": {
            "type": "object",
            "properties": {
                "s": {
                    "description": "String value associated with the parameter.\nthis field will be set when string value is used.",
                    "type": "string"
                },
                "dt": {
                    "description": "Date and time value associated with the parameter. Use the LocalizationParam.format field to specify date and time display style.\nthis field will be set when date and time value is used.",
                    "type": "string",
                    "format": "date-time"
                },
                "i": {
                    "description": "long value associated with the parameter.\nthis field will be set when long value is used.",
                    "type": "integer",
                    "format": "int64"
                },
                "d": {
                    "description": "The double value associated with the parameter. The number of displayed fractional digits is changed via LocalizationParam.precision field.\nthis field will be set when double value is used.",
                    "type": "number",
                    "format": "double"
                },
                "l": {
                    "description": "Nested localizable value associated with the parameter. This is useful construct to convert to human readable localized form enumerated type and boolean values. It can also be used for proper handling of pluralization and gender forms in localization. Recursive NestedLocalizableMessage instances can be used for localizing short lists of items.\nthis field will be set when nested localization message value is used.",
                    "$ref": "#/definitions/vapi.std.nested_localizable_message"
                },
                "format": {
                    "description": "Format associated with the date and time value in LocalizationParam.dt field. The enumeration value SHORT_DATETIME will be used as default.\nthis may not be set if enumeration value SHORT_DATETIME default format is appropriate",
                    "$ref": "#/definitions/vapi.std.localization_param.date_time_format"
                },
                "precision": {
                    "description": "Number of fractional digits to include in formatted double value.\nthis will be set when exact precision is required for rendering double numbers.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "vapi.std.localization_param.date_time_format": {
            "type": "string",
            "description": "The LocalizationParam.DateTimeFormat enumerated type lists possible date and time formatting options. It combines the Unicode CLDR format types - full, long, medium and short with 3 different presentations - date only, time only and combined date and time presentation.",
            "enum": [
                "SHORT_DATE",
                "MED_DATE",
                "LONG_DATE",
                "FULL_DATE",
                "SHORT_TIME",
                "MED_TIME",
                "LONG_TIME",
                "FULL_TIME",
                "SHORT_DATE_TIME",
                "MED_DATE_TIME",
                "LONG_DATE_TIME",
                "FULL_DATE_TIME"
            ]
        },
        "vapi.std.nested_localizable_message": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the localizable string or message template. \n This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.",
                    "type": "string"
                },
                "params": {
                    "description": "Named Arguments to be substituted into the message template.\nservices will not populate this field when there are no parameters to be substituted",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "$ref": "#/definitions/vapi.std.localization_param"
                            }
                        }
                    }
                }
            },
            "required": [
                "id"
            ]
        }
    }
}