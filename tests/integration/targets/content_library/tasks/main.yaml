---
- name: _Get Datastore id required for local library creation
  vmware.vmware_rest.vcenter_datastore_info:
    filter_names:
      - rw_datastore
  register: result

- name: Set datastore id
  set_fact:
    datastore_id: "{{ result.value[0].datastore }}"

- name: Create a new content library
  vmware.vmware_rest.content_locallibrary:
    name: local_library_001
    description: automated
    publish_info:
      published: true
      authentication_method: 'NONE'
    storage_backings:
      - datastore_id: '{{ datastore_id }}'
        type: 'DATASTORE'
    state: present
  register: new_lib

- name: Retrieve the local content library information based upon id check mode
  vmware.vmware_rest.content_locallibrary_info:
    library_id: '{{ new_lib.id }}'
  register: result
  check_mode: true

- name: Assert that result is available in check mode
  assert:
    that:
      - not result.changed
      - result.value is defined
      - result.value['name'] is defined
      - result.value['id'] is defined
      - result.value['description'] is defined
      - result.value['server_guid'] is defined
      - result.value['creation_time'] is defined
      - result.value['last_modified_time'] is defined
      - result.value['storage_backings'] is defined
      - result.value['version'] is defined
      - result.value['id'] == new_lib.id
      - result.value['type'] == 'LOCAL'

- name: _Retrieve the local content library information based upon id
  vmware.vmware_rest.content_locallibrary_info:
    library_id: '{{ new_lib.id }}'
  register: result

- debug: var=result

- name: _check the content library id details
  assert:
    that:
      - result.value is defined
      - result.value['name'] is defined
      - result.value['id'] is defined
      - result.value['description'] is defined
      - result.value['server_guid'] is defined
      - result.value['creation_time'] is defined
      - result.value['last_modified_time'] is defined
      - result.value['storage_backings'] is defined
      - result.value['version'] is defined
      - result.value['id'] == new_lib.id
      - result.value['type'] == 'LOCAL'

- name: Delete local content library
  vmware.vmware_rest.content_locallibrary:
    library_id: "{{ new_lib.id }}"
    state: absent
  register: result

- name: Assert that local content library is deleted
  assert:
    that:
      - result.changed
